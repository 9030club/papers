{
  "title": "Large Language Diffusion Models",
  "slug": "2502.09992v2",
  "questions": {
    "1": {
      "question": "What were they trying to do?",
      "answer": "The main goal of the paper was to explore whether large language models (LLMs) can achieve their capabilities through generative modeling principles beyond the traditional autoregressive models (ARMs). The authors introduced LLaDA, a diffusion model that uses a masked diffusion process to model language, aiming to challenge the assumption that key LLM capabilities are inherently tied to ARMs. They sought to demonstrate that diffusion models can be a viable and promising alternative to ARMs by showing LLaDA's strong performance in scalability, in-context learning, instruction-following, and reversal reasoning tasks.",
      "timestamp": "2025-08-25 13:13:54"
    },
    "2": {
      "question": "Why does it matter?",
      "answer": "The paper matters because it challenges the prevailing assumption that autoregressive models (ARMs) are the only viable approach for large language models (LLMs) by introducing LLaDA, a diffusion-based model. This matters because it opens up new possibilities for generative modeling in natural language processing, potentially leading to more efficient and capable models. Researchers and developers in AI and NLP care about this because it could lead to advancements in language understanding, instruction-following, and in-context learning, while addressing limitations of ARMs such as high computational costs and inefficiencies in certain tasks. Ultimately, this could impact various applications, from conversational AI to complex reasoning tasks, by providing alternative methods for building LLMs.",
      "timestamp": "2025-08-25 13:14:05"
    },
    "3": {
      "question": "What did they try?",
      "answer": "The authors of the paper introduced LLaDA, a diffusion model trained under the pre-training and supervised fine-tuning paradigm, as an alternative to autoregressive models (ARMs) for large language models. LLaDA employs a masked diffusion model that uses a forward data masking process and a reverse process to predict masked tokens, parameterized by a Transformer. This approach allows LLaDA to model bidirectional dependencies and optimize a likelihood bound, offering a principled generative approach for probabilistic inference. The model is trained on a large dataset and demonstrates strong scalability, competitive in-context learning, and instruction-following abilities, challenging the dominance of ARMs in language modeling.",
      "timestamp": "2025-08-25 13:14:10"
    },
    "4": {
      "question": "Did it work?",
      "answer": "Yes, the idea worked. The introduction of LLaDA, a diffusion model for large language models, demonstrated significant improvements and competitive performance compared to autoregressive models (ARMs). LLaDA outperformed ARM baselines in scalability, in-context learning, and instruction-following tasks. It was particularly effective in breaking the reversal curse, surpassing GPT-4o in a reversal poem completion task. These results suggest that diffusion models can be a viable alternative to ARMs, challenging the assumption that key capabilities of large language models are inherently tied to autoregressive approaches.",
      "timestamp": "2025-08-25 13:14:18"
    },
    "5": {
      "question": "What did they compare it to?",
      "answer": "The paper compares the proposed LLaDA diffusion model to autoregressive models (ARMs), specifically using self-constructed ARM baselines and models like LLaMA2 7B and LLaMA3 8B. The benchmarks used to evaluate LLaDA's performance include standard tasks such as MMLU, GSM8K, and others across various domains like language understanding, math, and code. LLaDA demonstrated strong scalability and performance, surpassing ARM baselines in some tasks and being competitive with LLaMA3 8B, particularly excelling in tasks like reversal poem completion where it outperformed GPT-4o.",
      "timestamp": "2025-08-25 13:14:25"
    },
    "6": {
      "question": "What was it tested on?",
      "answer": "The paper tested the LLaDA model on a variety of tasks using a dataset of 2.3 trillion tokens for pre-training and 4.5 million pairs for supervised fine-tuning. The evaluation setup included standard benchmarks for language understanding, math, code, and Chinese tasks. LLaDA's performance was compared against autoregressive model baselines, focusing on scalability, in-context learning, and instruction-following capabilities. The model was also evaluated on zero/few-shot learning tasks and a reversal poem completion task, demonstrating its competitive performance with existing large language models.",
      "timestamp": "2025-08-25 13:14:32"
    },
    "7": {
      "question": "What's cool about it?",
      "answer": "The paper introduces LLaDA, a novel diffusion model for large language modeling that challenges the dominance of autoregressive models (ARMs) by leveraging a masked diffusion approach. This method allows for bidirectional dependencies and addresses limitations of ARMs, such as computational inefficiency and poor performance on reversal reasoning tasks. LLaDA's ability to perform competitively with strong LLMs like LLaMA3, particularly in in-context learning and instruction-following, highlights its potential as a scalable and robust alternative to traditional ARMs, offering a fresh perspective on generative modeling in language tasks.",
      "timestamp": "2025-08-25 13:14:36"
    },
    "8": {
      "question": "What's sketchy about it?",
      "answer": "The paper presents several red flags and limitations. Firstly, due to computational constraints, the study could not directly compare LLaDA with autoregressive models (ARMs) on identical datasets beyond a certain computational budget, limiting the scope of the comparison. Additionally, LLaDA's sensitivity to inference hyperparameters and the lack of alignment with reinforcement learning for performance improvement are noted concerns. The paper also highlights that no specialized attention mechanisms or architectural optimizations were applied to LLaDA, which could affect its performance. Lastly, the study acknowledges that LLaDA's scale is smaller than leading counterparts, suggesting the need for further scaling to fully assess its capabilities.",
      "timestamp": "2025-08-25 13:14:40"
    },
    "9": {
      "question": "Can anyone use this?",
      "answer": "The LLaDA model, as described in the paper, is a complex and resource-intensive system. It requires significant computational resources for training, as evidenced by the 0.13 million H800 GPU hours used for pre-training. While the model shows promising capabilities, such as scalability and instruction-following, its practicality and accessibility are limited to those with substantial computational resources and expertise in machine learning. The model is not easily accessible for general use due to its complexity and the specialized knowledge required to implement and fine-tune it effectively.",
      "timestamp": "2025-08-25 13:14:47"
    },
    "10": {
      "question": "What's still left to figure out?",
      "answer": "The paper highlights several areas that remain unsolved or unclear, opening up new questions and future directions. Key limitations include the computational constraints that prevented direct comparisons between LLaDA and autoregressive models (ARMs) on identical datasets at larger scales. Additionally, the exploration of specialized attention mechanisms, position embeddings, and system-level architectural optimizations for LLaDA is still preliminary. The paper also notes the need for further research into guidance mechanisms and reinforcement learning alignment to improve LLaDA's performance and alignment with human intent. Furthermore, the potential of LLaDA to handle multi-modal data and its impact on prompt tuning techniques and integration into agent-based systems remain unexplored.",
      "timestamp": "2025-08-25 13:14:56"
    }
  },
  "markdown_pages": [
    {
      "id": 1,
      "title": "Large Language Diffusion Models",
      "content": "# Large Language Diffusion Models\n\nShen Nie ${ }^{1 *}$ Fengqi Zhu ${ }^{1 *}$ Zebin You ${ }^{1}$ Xiaolu Zhang ${ }^{2}$ Jingyang Ou ${ }^{1}$ Jun Hu ${ }^{2}$ Jun Zhou ${ }^{2}$<br>Yankai Lin ${ }^{1 \\ddagger}$ Ji-Rong Wen ${ }^{1}$ Chongxuan Li ${ }^{1 \\ddagger}$ *<br>\\section*{Abstract}\n\nAutoregressive models (ARMs) are widely regarded as the cornerstone of large language models (LLMs). We challenge this notion by introducing LLaDA, a diffusion model trained from scratch under the pre-training and supervised finetuning (SFT) paradigm. LLaDA models distributions through a forward data masking process and a reverse process, parameterized by a vanilla Transformer to predict masked tokens. By optimizing a likelihood bound, it provides a principled generative approach for probabilistic inference. Across extensive benchmarks, LLaDA demonstrates strong scalability, outperforming our self-constructed ARM baselines. Remarkably, LLaDA 8B is competitive with strong LLMs like LLaMA3 8B in in-context learning and, after SFT, exhibits impressive instruction-following abilities in case studies such as multi-turn dialogue. Moreover, LLaDA addresses the reversal curse, surpassing GPT-4o in a reversal poem completion task. Our findings establish diffusion models as a viable and promising alternative to ARMs, challenging the assumption that key LLM capabilities discussed above are inherently tied to ARMs. Project page and codes: https : //ml-gsai.github.io/LLaDA-demo/.\n\n## 1. Introduction\n\nWhat is now proved was once only imagined.\n—William Blake\n\nLarge language models (LLMs) (Zhao et al., 2023) fall entirely within the framework of generative modeling. Specifically, LLMs aim to capture the true but unknown language\n\n[^0]![img-0.jpeg](img-0.jpeg)\n\nFigure 1. Zero/Few-Shot Benchmarks. We scale LLaDA to an unprecedented size of 8B parameters from scratch, achieving competitive performance with strong LLMs (Dubey et al., 2024).\ndistribution $p_{\\text {data }}(\\cdot)$ by optimizing a model distribution $p_{\\theta}(\\cdot)$ through maximum likelihood estimation, or equivalently KL divergence minimization between the two distributions:\n\n$$\n\\underbrace{\\max }_{p} \\mathbb{E}_{p_{\\text {data }}(x)} \\log p_{\\theta}(x) \\Leftrightarrow \\min _{p} \\mathrm{KL}\\left(p_{\\text {data }}(x) \\| p_{\\theta}(x)\\right)\n$$\n\nThe predominant approach relies on the autoregressive modeling (ARM)—commonly referred to as the next-token prediction paradigm-to define the model distribution:\n\n$$\n\\underbrace{p_{\\theta}(x)}_{ \\text {Autoregressive formulation }}=\\underbrace{p_{\\theta}\\left(x^{1}\\right) \\prod_{i=2}^{L} p_{\\theta}\\left(x^{i} \\mid x^{1}, \\ldots, x^{i-1}\\right)}_{\\text {Autoregressive formulation }}\n$$\n\nwhere $x$ is a sequence of length $L$, and $x^{i}$ is the $i$-th token.\nThis paradigm has proven remarkably effective (Radford, 2018; Radford et al., 2019; Brown, 2020; OpenAI, 2022) and has become the foundation of current LLMs. Despite its widespread adoption, a fundamental question remains unanswered: Is the autoregressive paradigm the only viable path to achieving the intelligence exhibited by LLMs?\n\n[^0]:    ${ }^{\\dagger}$ Equal contribution ${ }^{\\dagger}$ Work done during an internship at Ant Group ${ }^{\\ddagger}$ Project leaders ${ }^{\\dagger}$ Gaoling School of Artificial Intelligence, Renmin University of China; Beijing Key Laboratory of Big Data Management and Analysis Methods ${ }^{\\ddagger}$ Ant Group. ${ }^{\\text {T }}$ Correspondence to: Chongxuan Li $<$ chongxuanli@ruc.edu.cn $>$.\n\nWe argue that the answer is not a simple \"yes\". The key insight overlooked previously is: it is the generative modeling principles (i.e., Eq. (1)), rather than the autoregressive formulation (i.e., Eq. (2)) itself, that fundamentally underpin the essential properties of LLMs, as detailed below. However, certain inherent limitations of LLMs can be directly traced to their autoregressive nature.\n\nIn particular, we argue that scalability is primarily a consequence of the interplay between Transformers (Vaswani, 2017), model and data size, and Fisher consistency ${ }^{1}$ (Fisher, 1922) induced by the generative principles in Eq. (1), rather than a unique result of ARM. The success of diffusion transformers (Bao et al., 2023; Peebles \\& Xie, 2023) on visual data (Brooks et al., 2024) supports this claim.\n\nFurthermore, the capabilities of instruction-following and in-context learning (Brown, 2020) appear to be intrinsic properties of all proper conditional generative models on structurally consistent linguistic tasks, rather than exclusive advantages of ARMs. In addition, while ARMs can be interpreted as a lossless data compressor (Deletang et al.; Huang et al., 2024b), any sufficiently expressive probabilistic model can achieve similar capabilities (Shannon, 1948).\n\nNevertheless, the autoregressive nature of LLMs presents notable challenges. For example, sequential token-by-token generation incurs high computational costs, and the left-to-right modeling limits effectiveness in reversal reasoning tasks (Berglund et al., 2023). These inherent limitations constrain LLMs in handling longer and more complex tasks.\n\nMotivated by these insights, we introduce LLaDA, a Large Language Diffusion with mAsking, to investigate whether the capabilities exhibited by LLMs can emerge from generative modeling principles beyond ARMs in Eq. (2), thereby addressing the fundamental question posed earlier. In contrast to traditional ARMs, LLaDA leverages a masked diffusion model (MDM) (Austin et al., 2021a; Lou et al., 2023; Shi et al., 2024; Sahoo et al., 2024; Ou et al., 2024), which incorporates a discrete random masking process and trains a mask predictor to approximate its reverse process. This design enables LLaDA to construct a model distribution with bidirectional dependencies and optimize a lower bound of its log-likelihood, offering an unexplored and principled alternative to existing LLMs.\n\nWe adopt the standard pipeline of data preparation, pretraining, supervised fine-tuning (SFT), and evaluation, scaling LLaDA to an unprecedented language diffusion of size 8B. In particular, LLaDA 8B was pre-trained from scratch on 2.3 trillion tokens using 0.13 million H800 GPU hours, followed by SFT on 4.5 million pairs. Across diverse tasks, including language understanding, math, code, and Chinese,\n\n[^0]LLaDA demonstrates the following contributions:\nScalability. LLaDA scales effectively up to a computational budget of $10^{23}$ FLOPs, achieving comparable results to selfconstructed ARM baselines trained on the same data across six tasks, e.g., MMLU and GSM8K.\n\nIn-Context Learning. Remarkably, LLaDA 8B surpasses LLaMA2 7B (Touvron et al., 2023) on nearly all 15 standard zero/few-shot learning tasks while performing on par with LLaMA3 8B (Dubey et al., 2024).\n\nInstruction-Following. LLaDA significantly enhances the ability to follow instructions after SFT, as demonstrated in case studies such as multi-turn dialogue.\n\nReversal Reasoning. LLaDA effectively breaks the reversal curse (Berglund et al., 2023) with consistent performance across forward and reversal tasks. Notably, it outperforms GPT-4o in a reversal poem completion task.\n\n## 2. Approach\n\nIn this section, we introduce the probabilistic formulation ${ }^{2}$, along with the pre-training, supervised fine-tuning, and inference procedures for LLaDA, as illustrated in Fig. 2.\n\n### 2.1. Probabilistic Formulation\n\nUnlike ARMs in Eq. (2), LLaDA defines a model distribution $p_{\\theta}\\left(x_{0}\\right)$ through a forward process and a reverse process (Austin et al., 2021a; Ou et al., 2024). The forward process gradually masks tokens independently in $x_{0}$ until the sequence is fully masked at $t=1$. For $t \\in(0,1)$, the sequence $x_{t}$ is partially masked, with each being masked with probability $t$ or remaining unmasked with probability $1-t$. The reverse process recovers the data distribution by iteratively predicting masked tokens as $t$ moves from 1 to 0 .\n\nThe core of LLaDA is a mask predictor, a parametric model $p_{\\theta}\\left(\\cdot \\mid x_{t}\\right)$ that takes $x_{t}$ as input and predicts all masked tokens (denoted M) simultaneously. It is trained using a crossentropy loss computed only on the masked tokens:\n\n$$\n\\mathcal{L}(\\theta) \\triangleq-\\mathbb{E}_{t, x_{0}, x_{t}}\\left[\\frac{1}{t} \\sum_{i=1}^{L} \\mathbf{1}\\left[x_{t}^{i}=\\mathrm{M}\\right] \\log p_{\\theta}\\left(x_{0}^{i} \\mid x_{t}\\right)\\right]\n$$\n\nwhere $x_{0}$ is sampled from the training data, $t$ is sampled uniformly from $[0,1]$, and $x_{t}$ is sampled from the forward process. The indicator function $\\mathbf{1}[\\cdot]$ ensures that the loss is computed only for masked tokens.\n\nOnce trained, we can simulate a reverse process (see Sec. 2.4 for details) parameterized by the mask predictor and define the model distribution $p_{\\theta}\\left(x_{0}\\right)$ as the marginal distribution\n\n[^1]\n[^0]:    ${ }^{1}$ It suggests the ability to recover the true data distribution with infinite data, a sufficiently large network and optimal training.\n\n[^1]:    ${ }^{2}$ Here, we focus on the approach of LLaDA. A rigorous formulation of MDM is provided in Appendix A for interested readers.\n\n![img-1.jpeg](img-1.jpeg)\n\nFigure 2. A Conceptual Overview of LLaDA. (a) Pre-training. LLaDA is trained on text with random masks applied independently to all tokens at the same ratio \\( t \\sim U[0, 1] \\). (b) SFT. Only response tokens are possibly masked. (c) Sampling. LLaDA simulates a diffusion process from \\( t = 1 \\) (fully masked) to \\( t = 0 \\) (unmasked), predicting all masks simultaneously at each step with flexible remask strategies.\n\ninduced at \\( t = 0 \\). Notably, the loss in Eq. (3) has been proven to be an upper bound on the negative log-likelihood of the model distribution (Shi et al., 2024; Ou et al., 2024):\n\n$$\n-\\mathbb{E}_{p_{\\text{data}}(x_0)} [\\log p_{\\theta}(x_0)] \\le \\mathcal{L}(\\theta), \\tag{4}\n$$\n\nmaking it a principled objective for generative modeling.\n\nNotably, LLaDA employs a masking ratio that varies randomly between 0 and 1 while masked language models (Devlin, 2018) use a fixed ratio. The subtly differences have significant implications, especially at scale: as shown in Eq. (4), LLaDA is a principled generative model with the potential to perform *in-context learning* naturally, akin to LLMs. Moreover, its generative perspective ensures *Fisher consistency* (Fisher, 1922) in extreme cases, suggesting strong *scalability* with large data and models.\n\n### 2.2. Pre-training\n\nLLaDA employs a Transformer (Vaswani, 2017) as the mask predictor, whose architecture is similar to existing LLMs. However, LLaDA does not use a causal mask, as its formulation allows it to see the entire input for predictions.\n\nWe trained two variants of LLaDA with different sizes: 1 billion (B) and 8B. We summarize the model architecture of LLaDA 8B and LLaMA3 8B (Dubey et al., 2024) here and details are provided in Appendix B.2. We have ensured consistency in most hyperparameters while making several necessary modifications. We use vanilla multi-head attention instead of grouped query attention (Ainslie et al., 2023) for simplicity, as LLaDA is incompatible with KV caching, resulting in a different number of key and value heads. Consequently, the attention layer has more parameters, and we reduce the FFN dimension to maintain a comparable model size. Additionally, the vocabulary size differs slightly due to a tokenizer (Brown, 2020) adapted on our data.\n\nThe LLaDA model is pre-trained on a dataset comprising 2.3 trillion (T) tokens, adhering to a data protocol that aligns closely with existing large language models (LLMs) (Touvron et al., 2023; Chu et al., 2024), without the incorporation of any special techniques. The data are derived from online corpora, with low-quality content filtered through manually designed rules and LLM-based approaches. Beyond general text, the dataset encompasses high-quality code, math, and multilingual data. The mixing of data sources and domains is guided by scaled-down ARMs. The pre-training process utilizes a fixed sequence length of 4096 tokens, incurring a total computational cost of 0.13 million H800 GPU hours, similar to ARMs of the same scale and dataset size.\n\nFor a training sequence \\( x_0 \\), we randomly sample \\( t \\in [0, 1] \\), mask each token independently with the same probability \\( t \\) to obtain \\( x_t \\) (see Fig. 2 (a)) and estimate Eq. (3) via the Monte Carlo method for stochastic gradient descent training. In addition, following Nie et al. (2024), to enhance the ability of LLaDA to handle variable-length data, we set 1% of the pre-training data to a random length that is uniformly sampled from the range [1, 4096].\n\nWe adopted the Warmup-Stable-Decay (Hu et al., 2024) learning rate scheduler to monitor the training progress without interrupting continuous training. Specifically, we linearly increased the learning rate from 0 to \\( 4 \\times 10^{-4} \\) over the first 2000 iterations and maintained it at \\( 4 \\times 10^{-4} \\). After processing 1.2T tokens, we decayed the learning rate to \\( 1 \\times 10^{-4} \\) and held it constant for the next 0.8T tokens to ensure stable training. Finally, we linearly reduced the learning rate from \\( 1 \\times 10^{-4} \\) to \\( 1 \\times 10^{-5} \\) for the last 0.3T tokens. Furthermore, we utilized the AdamW optimizer (Loshchilov, 2017) with a weight decay of 0.1, a batch size of 1280, and a local batch size of 4 per GPU. The 8B experiment was executed once, without any hyperparameter tuning.\n\n### 2.3. Supervised Fine-Tuning\n\nWe enhance the capability of LLaDA to follow instructions by supervised fine-tuning (SFT) with paired data \\( p_0, r_0 \\),\n\nwhere $p_{0}$ is the prompt and $r_{0}$ denotes the response. This is the simplest and most basic post-training method for LLMs. Technically, this requires to model the conditional distribution $p_{\\theta}\\left(r_{0} \\mid p_{0}\\right)$ instead of $p_{\\theta}\\left(x_{0}\\right)$ in pre-training.\n\nThe implementation is similar to pre-training. As shown in Fig. 2 (b), we leave the prompt unchanged and mask the tokens in the response independently, as done for $x_{0}$. Then, we feed both the prompt and the masked response $r_{t}$ to the pre-trained mask predictor to compute the loss for SFT:\n\n$$\n-\\mathbb{E}_{t, p_{0}, r_{0}, r_{t}}\\left[\\frac{1}{t} \\sum_{i=1}^{L^{\\prime}} \\mathbf{1}\\left[r_{t}^{i}=\\mathrm{M}\\right] \\log p_{\\theta}\\left(r_{0}^{i} \\mid p_{0}, r_{t}\\right)\\right]\n$$\n\nwhere $L^{\\prime}$ denotes a dynamic length specified later, and all other notations remain the same as before.\n\nNote that this approach is fully compatible with pre-training. Essentially, the concatenation of $p_{0}$ and $r_{0}$ can be treated as clean pre-training data $x_{0}$, while the concatenation of $p_{0}$ and $r_{t}$ serves as the masked version $x_{t}$. The process is identical to pre-training, with the only difference being that all masked tokens happen to appear in the $r_{0}$ portion.\n\nThe LLaDA 8B model undergoes SFT on a dataset comprising 4.5 million pairs. Consistent with the pre-training process, both data preparation and training follow the SFT protocols utilized in existing LLMs (Chu et al., 2024; Yang et al., 2024), without introducing any additional techniques to optimize LLaDA's performance. The dataset spans multiple domains, including code, mathematics, instructionfollowing, and structured data understanding. We append $\\mid$ EOS $\\mid$ tokens to the end of short pairs in each mini-batch to ensure equal lengths across all data. We treat $\\mid$ EOS $\\mid$ as a normal token during training and remove it during sampling, enabling LLaDA to control the response length automatically. Please refer to Appendix B. 1 for more details.\n\nWe train for 3 epochs on the SFT data using a similar schedule to the pre-training phase. The learning rate is linearly increased from 0 to $2.5 \\times 10^{-5}$ over the first 50 iterations and then kept constant. During the final $10 \\%$ of iterations, it is linearly reduced to $2.5 \\times 10^{-6}$. Additionally, we set the weight decay to 0.1 , the global batch size to 256 , and the local batch size to 2 per GPU. The SFT experiment was executed once, without any hyperparameter tuning.\n\n### 2.4. Inference\n\nAs a generative model, LLaDA is capable of both sampling new text and evaluating the likelihood of candidate text.\n\nWe begin with the sampling. As illustrated in Fig. 2 (c), given a prompt $p_{0}$, we discretize the reverse process to sample from the model distribution $p_{\\theta}\\left(r_{0} \\mid p_{0}\\right)$, starting from a fully masked response. The total number of sampling steps is a hyperparameter, which naturally provides LLaDA with a\ntrade-off between efficiency and sample quality, as analyzed in Sec. 3.3. We employ uniformly distributed timesteps by default. In addition, the generation length is also treated as a hyperparameter, specifying the length of the fully masked sentence at the beginning of the sampling process. As detailed in Appendix B.4, since both pre-training and SFT are conducted using datasets with variable lengths, the final results are insensitive to this length hyperparameter.\n\nAt an intermediate step from time $t \\in(0,1]$ to $s \\in[0, t)$, we feed both $p_{0}$ and $r_{t}$ into the mask predictor and predict all masked tokens simultaneously. Subsequently, we remask $\\frac{s}{t}$ of the predicted tokens in expectation to obtain $r_{s}$, ensuring that the transition of the reverse process aligns with the forward process for accurate sampling (Austin et al., 2021a).\n\nIn principle, the remasking strategy should be purely random. However, inspired by the annealing tricks of sampling in LLMs (Holtzman et al., 2019; Brown, 2020), we explore two deterministic yet effective remasking strategies. Specifically, similarly to Chang et al. (2022), we remask the $\\frac{s}{t}$ of predicted tokens with the lowest confidence based on the predictions, called low-confidence remasking. Additionally, for LLaDA after SFT, we can divide the sequence into several blocks and generate them from left to right, called semi-autoregressive remasking. Within each block, we apply the reverse process to perform sampling. We provide more details and ablation studies in Appendix. B.3.\n\nFor conditional likelihood evaluation, we can naturally utilize the upper bound in Eq. (5). However, we find that the following equivalent form (Ou et al., 2024) exhibits lower variance and is more stable for evaluation:\n\n$$\n-\\mathbb{E}_{l, r_{0}, r_{l}}\\left[\\frac{L}{l} \\sum_{i=1}^{L} \\mathbf{1}\\left[r_{l}^{i}=\\mathrm{M}\\right] \\log p_{\\theta}\\left(r_{0}^{i} \\mid p_{0}, r_{l}\\right)\\right]\n$$\n\nwhere $l$ is uniformly sampled from $\\{1,2, \\ldots, L\\}$, and $r_{l}$ is obtained by uniformly sampling $l$ tokens from $r_{0}$ without replacement for masking. In addition, we employ the unsupervised classifier-free guidance (Nie et al., 2024). We refer the readers to more details in Appendix A.2.\n\nWe present the training, sampling, and likelihood evaluation algorithms, along with theoretical details, in Appendix A.\n\n## 3. Experiments\n\nWe evaluate the scalability, instruction-following, and incontext learning capabilities of LLaDA on standard benchmarks, followed by analyses and case studies on more controlled datasets to provide a comprehensive assessment.\n\n### 3.1. Scalability of LLaDA on Language Tasks\n\nWe first investigate the scalability of LLaDA on downstream tasks in comparison with the ARM baselines we constructed.\n\n![img-2.jpeg](img-2.jpeg)\n\nFigure 3. Scalability of LLaDA. We evaluate the performance of LLaDA and our ARM baselines trained on the same data across increasing computational FLOPs. LLaDA exhibits strong scalability, matching the overall performance of ARMs on six tasks.\n\nSpecifically, at the 1B scale, we ensured that LLaDA and ARM shared the same architecture, data, and all other configurations. At larger scales, we also report results for LLaDA and ARM models of slightly different sizes trained on the same data due to resource limit, as detailed in Appendix B.2. We use the computational cost as a unified scaling metric. For evaluation, we focused on six standard and diverse tasks.\n\nAs shown in Fig. 3, LLaDA demonstrates impressive scalability, with its overall trend being highly competitive with that of ARM. Notably, in tasks such as MMLU and GSM8K, LLaDA exhibits even stronger scalability. Even on tasks like PIQA, where performance lags, LLaDA narrows the gap with ARMs at larger scales. To account for the significant influence of outliers, we opted not to fit quantitative scaling curves, avoiding potential misinterpretation. Nevertheless, the results clearly demonstrate the scalability of LLaDA.\n\nNie et al. (2024) suggests that MDM requires 16 times more computation than ARM to achieve the same likelihood. However, there are key differences that make the conclusions of this study more broadly applicable. In particular, likelihood is a relatively indirect metric for downstream task performance, and diffusion optimizes a bound of the likelihood, making it not directly comparable to ARM. Additionally, we extended the scaling range from 10<sup>18</sup> ~ 10<sup>20</sup> in Nie et al. (2024) to 10<sup>20</sup> ~ 10<sup>23</sup> in this work.\n\n### 3.2. Benchmark Results\n\nTo comprehensively evaluate the *in-context learning* and *instruction-following* capabilities of LLaDA 8B, we conducted detailed comparisons with existing LLMs (Touvron et al., 2023; Dubey et al., 2024; Chu et al., 2024; Yang et al., 2024; Bi et al., 2024; Jiang et al., 2023) of similar scale. The selection of tasks and evaluation protocols was aligned with existing studies, encompassing 15 popular benchmarks in general tasks, mathematics, code, and Chinese. Further details are provided in Appendix B.5. For a more direct comparison, we re-evaluated representative LLMs (Touvron et al., 2023; Dubey et al., 2024) in our implementation.\n\nAs shown in Tab. 1, after pretraining on 2.3T tokens, LLaDA 8B demonstrates remarkable performance, surpassing LLaMA2 7B on nearly all tasks, and is overall competitive with LLaMA3 8B. LLaDA shows advantages in math and Chinese tasks. We conjecture that the strengths stem from the same factors as its relatively weaker performance in some tasks—differences in data quality and distribution, largely due to the closed-source situation of LLM datasets.\n\nNotably, we have carefully ruled out the possibility of data leakage by taking GSM8K as an example. First, as shown in Fig. 3, LLaDA outperformed ARM baselines regarding GSM8K. Moreover, the conclusion remains on a fully unseen GSM8K-like task (Ye et al., 2024) in Appendix B.7.\n\nFurther, Tab. 2 compares the performance of LLaDA 8B Instruct with existing LLMs. We observed that SFT improved LLaDA's performance on most downstream tasks. A few metrics, such as MMLU, showed declines, and we conjecture may be due to the suboptimal quality of the SFT data. Overall, since we did not perform alignment with reinforcement learning (RL), our results are slightly behind LLaMA3 8B Instruct, though the gaps in many metrics remain small. Notably, even with only SFT, LLaDA demonstrates impres-\n\nTable 1. Benchmark Results of Pre-trained LLMs. * indicates that LLaDA 8B Base, LLaMA2 7B Base, and LLaMA3 8B Base are evaluated under the same protocol, detailed in Appendix B.5. Results indicated by ${ }^{\\dagger}$ and ${ }^{\\mathbf{5}}$ are sourced from Chu et al. (2024); Yang et al. (2024) and Bi et al. (2024) respectively. The numbers in parentheses represent the number of shots used for evaluation. \"-\" indicates unknown data.\n\n|   | LLaDA 8B* | LLaMA3 8B* | LLaMA2 7B* | Qwen2 7B ${ }^{\\dagger}$ | Qwen2.5 7B ${ }^{\\dagger}$ | Mistral 7B ${ }^{\\dagger}$ | Deepseek 7B ${ }^{\\mathbf{5}}$  |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n|  Model\n## Training tokens | Diffusion\n## 2.3 T | AR\n## 15 T | AR\n## 2 T | AR\n## 7 T | AR\n## 18 T | AR\n## - | AR\n## 2 T  |\n|  General Tasks |  |  |  |  |  |  |   |\n## |  MMLU | 65.9 (5) | 65.4 (5) | 45.9 (5) | 70.3 (5) | 74.2 (5) | 64.2 (5) | 48.2 (5)  |\n## |  BBH | 49.8 (3) | 57.6 (3) | 37.3 (3) | 62.3 (3) | 70.4 (3) | 56.1 (3) | 39.5 (3)  |\n## |  ARC-C | 47.9 (0) | 53.1 (0) | 46.3 (0) | 60.6 (25) | 63.7 (25) | 60.0 (25) | 48.1 (0)  |\n|  Hellaswag | 72.5 (0) | 79.1 (0) | 76.0 (0) | 80.7 (10) | 80.2 (10) | 83.3 (10) | 75.4 (0)  |\n|  TruthfulQA | 46.4 (0) | 44.0 (0) | 39.0 (0) | 54.2 (0) | 56.4 (0) | 42.2 (0) | -  |\n|  WinoGrande | 74.8 (5) | 77.3 (5) | 72.5 (5) | 77.0 (5) | 75.9 (5) | 78.4 (5) | 70.5 (0)  |\n## |  PIQA | 74.4 (0) | 80.6 (0) | 79.1 (0) | - | - | - | 79.2 (0)  |\n|  Mathematics \\& Science |  |  |  |  |  |  |   |\n## |  GSM8K | 70.7 (4) | 53.1 (4) | 14.3 (4) | 80.2 (4) | 85.4 (4) | 36.2 (4) | 17.4 (8)  |\n|  Math | 27.3 (4) | 15.1 (4) | 3.2 (4) | 43.5 (4) | 49.8 (4) | 10.2 (4) | 6.0 (4)  |\n## |  GPQA | 26.1 (5) | 25.9 (5) | 25.7 (5) | 30.8 (5) | 36.4 (5) | 24.7 (5) | -  |\n|  Code |  |  |  |  |  |  |   |\n|  HumanEval | 33.5 (0) | 34.2 (0) | 12.8 (0) | 51.2 (0) | 57.9 (0) | 29.3 (0) | 26.2 (0)  |\n|  HumanEval-FIM | 73.8 (2) | 73.3 (2) | 26.9 (2) | - | - | - | -  |\n## |  MBPP | 38.2 (4) | 47.4 (4) | 18.4 (4) | 64.2 (0) | 74.9 (0) | 51.1 (0) | 39.0 (3)  |\n|  Chinese |  |  |  |  |  |  |   |\n## |  CMMLU | 69.9 (5) | 50.7 (5) | 32.5 (5) | 83.9 (5) | - | - | 47.2 (5)  |\n|  C-Eval | 70.5 (5) | 51.7 (5) | 34.0 (5) | 83.2 (5) | - | - | 45.0 (5)  |\n\nTable 2. Benchmark Results of Post-trained LLMs. LLaDA only employs an SFT procedure while other models have extra reinforcement learning (RL) alignment. * indicates that LLaDA 8B Instruct, LLaMA2 7B Instruct, and LLaMA3 8B Instruct are evaluated under the same protocol, detailed in Appendix B.5. Results indicated by ${ }^{\\dagger}$ and ${ }^{\\mathbf{5}}$ are sourced from Yang et al. (2024) and Bi et al. (2024) respectively. The numbers in parentheses represent the number of shots used for in-context learning. \"-\" indicates unknown data.\n\n|   | LLaDA 8B* | LLaMA3 8B* | LLaMA2 7B* | Qwen2 7B ${ }^{\\dagger}$ | Qwen2.5 7B ${ }^{\\dagger}$ | Gemma2 9B ${ }^{\\dagger}$ | Deepseek 7B ${ }^{\\mathbf{5}}$  |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n|  Model\n## Training tokens | Diffusion\n## 2.3 T | AR\n## 15 T | AR\n## 2 T | AR\n## 7 T | AR\n## 18 T | AR\n## 8 T | AR\n## 2 T  |\n|  Post-training\n## Alignment pairs | SFT\n## 4.5 M | SFT+RL\n## - | SFT+RL\n## - | SFT+RL\n$0.5 \\mathrm{M}+-$ | SFT+RL\n$1 \\mathrm{M}+0.15 \\mathrm{M}$ | SFT+RL\n## - | SFT+RL\n$1.5 \\mathrm{M}+-$  |\n|  General Tasks |  |  |  |  |  |  |   |\n## |  MMLU | 65.5 (5) | 68.4 (5) | 44.1 (5) | - | - | - | 49.4 (0)  |\n|  MMLU-pro | 37.0 (0) | 41.9 (0) | 4.6 (0) | 44.1 (5) | 56.3 (5) | 52.1 (5) | -  |\n|  Hellaswag | 74.6 (0) | 75.5 (0) | 51.5 (0) | - | - | - | 68.5 (-)  |\n## |  ARC-C | 88.5 (0) | 82.4 (0) | 57.3 (0) | - | - | - | 49.4 (-)  |\n|  Mathematics \\& Science |  |  |  |  |  |  |   |\n## |  GSM8K | 78.6 (4) | 78.3 (4) | 29.0 (4) | 85.7 (0) | 91.6 (0) | 76.7 (0) | 63.0 (0)  |\n|  Math | 26.6 (0) | 29.6 (0) | 3.8 (0) | 52.9 (0) | 75.5 (0) | 44.3 (0) | 15.8 (0)  |\n## |  GPQA | 31.8 (5) | 31.9 (5) | 28.4 (5) | 34.3 (0) | 36.4 (0) | 32.8 (0) | -  |\n|  Code |  |  |  |  |  |  |   |\n|  HumanEval | 47.6 (0) | 59.8 (0) | 16.5 (0) | 79.9 (0) | 84.8 (0) | 68.9 (0) | 48.2 (-)  |\n## |  MBPP | 34.2 (4) | 57.6 (4) | 20.6 (4) | 67.2 (0) | 79.2 (0) | 74.9 (0) | 35.2 (-)  |\n\nTable 3. Comparison in the Poem Completion Task.\n\n|  | Forward | Reversal |\n| :-- | :--: | :--: |\n| GPT-4o (2024-08-06) | $\\mathbf{8 2 . 7}$ | 34.3 |\n| Qwen2.5 7B Instruct | 75.9 | 38.0 |\n| LLaDA 8B Instruct | 48.8 | $\\mathbf{4 2 . 4}$ |\n\nsive instruction-following abilities, as detailed in Sec. 3.4. We leave RL-based alignment for future work.\n\nOverall, despite the lack of data transparency, we have made every effort to adopt standardized procedures and introduce diverse tasks, we believe they sufficiently demonstrate the extraordinary capabilities of LLaDA, which is the only competitive non-autoregressive model to our knowledge.\n\n### 3.3. Reversal Reasoning and Analyses\n\nTo quantify the reversal reasoning ability of models (Berglund et al., 2023), we follow the protocol established in Allen-Zhu \\& Li (2023). Specifically, we construct a dataset of 496 famous Chinese poem sentence pairs. Given a sentence from a poem, models are tasked with generating the subsequent line (forward) or the preceding line (reversal) without additional fine-tuning. Examples can be found in Appendix B.8. This setting provides a straightforward and more realistic evaluation compared to previous studies (Nie et al., 2024; Kitouni et al., 2024).\n\nAs shown in Tab. 3, LLaDA effectively addresses the reversal curse (Berglund et al., 2023), demonstrating consistent zero-shot performance across both forward and reversal tasks. In contrast, both Qwen 2.5 and GPT-4o exhibit a significant gap between the two. The results on forward generation confirm that both ARMs are strong, benefiting from significantly larger datasets and greater computational resources than LLaDA. However, LLaDA outperforms both by a large margin in the reversal task.\n\nWe emphasize that we did not design anything special for reversal tasks. Intuitively, LLaDA treats tokens uniformly without inductive bias, leading to balanced performance. See more details in Appendix A.2.\n\nWe also analyze the effect of remasking strategies and sampling steps, as detailed in Appendix B. 3 and Appendix B.6.\n\n### 3.4. Case Studies\n\nWe present samples generated by LLaDA 8B Instruct in Tab. 4, showcasing its instruction-following capabilities. First, the table illustrates LLaDA's ability to generate coherent, fluent, and extended text in a non-autoregressive manner. Second, it highlights the model's multi-turn dialogue capability, effectively retaining conversation history\nand producing contextually appropriate responses across multiple languages. Such chat capabilities of LLaDA are impressive, as it departs from conventional ARMs for the first time, to the best of our knowledge. See more case studies on remasking and reasoning tasks in Appendix B.9.\n\n## 4. Related Work\n\nDiffusion models (Sohl-Dickstein et al., 2015; Ho et al., 2020; Song et al., 2020) have excelled in visual domains but remain unverified for LLMs despite extensive efforts.\n\nA simple approach is to continuousize text data and apply diffusion models directly (Li et al., 2022; Gong et al., 2022; Han et al., 2022; Strudel et al., 2022; Chen et al., 2022; Dieleman et al., 2022; Richemond et al., 2022; Wu et al., 2023; Mahabadi et al., 2024; Ye et al., 2023b). Alternatively, some methods model continuous parameters of discrete distributions instead (Lou \\& Ermon, 2023; Graves et al., 2023; Lin et al., 2023; Xue et al., 2024). However, scalability remains a challenge, as a 1B parameter model requires 64 times the compute of an ARM to achieve comparable performance (Gulrajani \\& Hashimoto, 2024).\n\nAnother approach replaces continuous diffusion with discrete processes featuring new forward and reverse dynamics (Austin et al., 2021a), leading to numerous variants (Hoogeboom et al., 2021b;a; He et al., 2022; Campbell et al., 2022; Meng et al., 2022; Reid et al., 2022; Sun et al., 2022; Kitouni et al., 2023; Zheng et al., 2023; Chen et al., 2023; Ye et al., 2023a; Gat et al., 2024; Zheng et al., 2024; Sahoo et al., 2024; Shi et al., 2024). Notably, Lou et al. (2023) showed that masked diffusion, as a special case of discrete diffusion, achieves perplexity comparable to or surpassing ARMs at GPT-2 scale. Ou et al. (2024) established fundamental theoretical results, which motivated our model design, training, and inference (see Appendix A). Nie et al. (2024) explored how MDM can be leveraged for language tasks such as question answering at GPT-2 scale. Gong et al. (2024) fine-tune ARMs in the MDM formulation. However, improvements are confined to certain metrics, and it remains unclear whether this approach can yield a foundation model comparable to strong LLMs under a comprehensive evaluation.\n\nIn comparison, this study scales MDM to an unprecedented size of 8B parameters from scratch, achieving performance comparable to leading LLMs such as LLaMA 3.\n\nAdditionally, a parallel line of work on image generation (Chang et al., 2022; 2023) aligns well with the application of MDMs to text data. Moreover, MDMs have also shown promise in domains such as protein generation (Wang et al., 2024b;c), where they have achieved promising results. Notably, Kou et al. (2024); Xu et al. (2025) demonstrate the potential of using distillation to accelerate MDMs sampling,\n\nTable 4. Visualization of the Sampling Process and a Generated Multi-round Dialogue. In the response of LLaDA, darker colors indicate tokens predicted in the later stages of sampling, while lighter colors correspond to earlier predictions.\n\n| Sampling Process |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n| User | Lily can run 12 kilometers per hour for 4 hours. After that, she runs 6 kilometers per hour. How many kilometers can she run in 8 hours? |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| LLaDA | In 4 hours Lly |  |  |  | Lily | runs | 12 | * | 4 | $=$ | 48 | kilometers |  | After | 4 |\n|  | hours | she | runs | 6 | * | 4 | $=$ | 24 | kilometers |  |  | In | total | she | runs | 48 |\n|  | $+$ | 24 | $=$ | 72 | kilometers |  | In | 8 | hours |  | Result | 72 |  |  |  |  |\n| Multi-round Dialogue Case |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| User | Could you please share with me what the initial two lines of the renowned poem 'The Road Not Taken'? |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| LLaDA | Certainly! The initial two lines of the renowned poem \"The Road Not Taken\" by Robert Frost are: \"Two roads diverged in a yellow wood, And sorry I could not travel both.\" These lines set the stage for the poem, introducing the idea of a speaker facing a choice between two paths. |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| User | Please help me translate into Chinese. |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| LLaDA | Sure! The first two lines of \"The Road Not Taken\" by Robert Frost can be translated into Chinese as: \"两条路分岔在黄色的树林中，遗憾我不能同时走\" |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| User | Please translate into German. |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| LLaDA | Sure! The first two lines of \"The Road Not Taken\" by Robert Frost can be translated into German as: \"Zwei Wege trennten sich im gelben Wald, und leider konnte ich nicht beide tun.\" |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| User | Please also write a poem about life choices. I require 5 sentences, and the first word of each sentence starts with C as the first letter. |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| LLaDA | Certainly! Here's a poem about life choices, with each sentence starting with the letter \"C\": Choices cascade through life's journey, Creating connections with each decision, Careful consideration leads to better paths, Courageous choices shape our destiny, Choosing wisely guides us through the years. |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n\nfurther enhancing their efficiency.\n\n## 5. Conclusion and Discussion\n\nIn the middle of difficulty lies opportunity.\n—Albert Einstein\nWe introduce LLaDA, a principled and previously unexplored approach to large language modeling based on diffusion models. LLaDA demonstrates strong capabilities in scalability, in-context learning, and instruction-following, achieving performance comparable to strong LLMs. In addition, LLaDA offers unique advantages such as bidirectional modeling and enhanced robustness, effectively addressing several inherent limitations of existing LLMs. Our findings not only establish diffusion models as a viable and promising alternative but also challenge the prevailing assumption that these essential capabilities are inherently tied to ARMs.\n## While promising, the full potential of diffusion models re-\nmains to be fully explored. Several limitations of this work present significant opportunities for future research.\n\nDue to computational constraints, direct comparisons between LLaDA and ARMs-such as training on identical datasets-were restricted to a computational budget of less than $10^{23}$ FLOPs. To allocate resources for training the largest possible LLaDA model and showcasing its potential, we were unable to scale the ARM baseline to the same extent. Moreover, no specialized attention mechanisms or position embeddings were designed for LLaDA, nor were any system-level architectural optimizations applied. On the inference side, our exploration of guidance mechanisms (Dhariwal \\& Nichol, 2021; Ho \\& Salimans, 2022) remains preliminary, and LLaDA currently exhibits sensitivity to inference hyperparameters. Furthermore, LLaDA has yet to undergo alignment with reinforcement learning (Ouyang et al., 2022; Rafailov et al., 2024), which is crucial for improving its performance and alignment with human intent.\n\nLooking forward, the scale of LLaDA is still smaller than leading counterparts (Achiam et al., 2023; Dubey et al., 2024; Google, 2024; Anthropic, 2024; Yang et al., 2024; Liu et al., 2024), highlighting the need for further scaling to fully assess its capabilities. In addition, LLaDA's ability to handle multi-modal data remains unexplored. The impact of LLaDA on prompt tuning techniques (Wei et al., 2022) and its integration into agent-based systems (Park et al., 2023; Wang et al., 2024a) is yet to be fully understood. Finally, a systematic investigation into post-training for LLaDA could facilitate the development of O1-like systems (OpenAI, 2024; Guo et al., 2025).\n\n## Impact Statement\n\nThis work challenges the prevailing dominance of autoregressive modeling in LLMs by proposing a diffusion-based alternative. Our findings open new avenues for exploring alternative probabilistic paradigms in natural language processing, with potential applications in conversational AI, code generation, and complex reasoning tasks.\n\nHowever, diffusion-based models, like traditional LLMs, raise similar societal concerns. These include the environmental impact of large-scale training, the potential misuse for generating harmful or misleading content, and the amplification of biases present in training data. Addressing these challenges is critical to ensuring the responsible development and deployment of diffusion-based language models.\n\n## Acknowledgements\n\nThis work was supported by the National Natural Science Foundation of China (No. 92470118); Beijing Natural Science Foundation (No. L247030); Beijing Nova Program (No. 20220484044); Major Innovation \\& Planning Interdisciplinary Platform for the \"Double-First Class\" Initiative, Renmin University of China; the Fundamental Research Funds for the Central Universities, the Research Funds of Renmin University of China (22XNKJ13); Ant Group Research Fund. The work was partially done at the Engineering Research Center of Next-Generation Intelligent Search and Recommendation, Ministry of Education.\n\n## References\n\nAchiam, J., Adler, S., Agarwal, S., Ahmad, L., Akkaya, I., Aleman, F. L., Almeida, D., Altenschmidt, J., Altman, S., Anadkat, S., et al. Gpt-4 technical report. arXiv preprint arXiv:2303.08774, 2023.\n\nAinslie, J., Lee-Thorp, J., de Jong, M., Zemlyanskiy, Y., Lebron, F., and Sanghai, S. Gqa: Training generalized multi-query transformer models from multi-head checkpoints. In Proceedings of the 2023 Conference on Em-\npirical Methods in Natural Language Processing, pp. 4895-4901, 2023.\n\nAllen-Zhu, Z. and Li, Y. Physics of Language Models: Part 3.2, Knowledge Manipulation. ArXiv e-prints, abs/2309.14402, September 2023. Full version available at http://arxiv.org/abs/2309.14402.\n\nAnonymous. Interpolating autoregressive and discrete denoising diffusion language models. In The Thirteenth International Conference on Learning Representations, 2025. URL https://openreview.net/forum? id=tyEyYT267x.\n\nAnthropic. Claude 3.5 sonnet, 2024. URL https://www . anthropic.com/news/claude-3-5-sonnet.\n\nAustin, J., Johnson, D. D., Ho, J., Tarlow, D., and Van Den Berg, R. Structured denoising diffusion models in discrete state-spaces. Advances in Neural Information Processing Systems, 34:17981-17993, 2021a.\n\nAustin, J., Odena, A., Nye, M., Bosma, M., Michalewski, H., Dohan, D., Jiang, E., Cai, C., Terry, M., Le, Q., et al. Program synthesis with large language models. arXiv preprint arXiv:2108.07732, 2021b.\n\nBao, F., Nie, S., Xue, K., Cao, Y., Li, C., Su, H., and Zhu, J. All are worth words: A vit backbone for diffusion models. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pp. 2266922679, 2023.\n\nBavarian, M., Jun, H., Tezak, N., Schulman, J., McLeavey, C., Tworek, J., and Chen, M. Efficient training of language models to fill in the middle. arXiv preprint arXiv:2207.14255, 2022.\n\nBerglund, L., Tong, M., Kaufmann, M., Balesni, M., Stickland, A. C., Korbak, T., and Evans, O. The reversal curse: Llms trained on\" a is b\" fail to learn\" b is a\". arXiv preprint arXiv:2309.12288, 2023.\n\nBi, X., Chen, D., Chen, G., Chen, S., Dai, D., Deng, C., Ding, H., Dong, K., Du, Q., Fu, Z., et al. Deepseek llm: Scaling open-source language models with longtermism. arXiv preprint arXiv:2401.02954, 2024.\n\nBisk, Y., Zellers, R., Gao, J., Choi, Y., et al. Piqa: Reasoning about physical commonsense in natural language. In Proceedings of the AAAI conference on artificial intelligence, 2020.\n\nBrooks, T., Peebles, B., Holmes, C., DePue, W., Guo, Y., Jing, L., Schnurr, D., Taylor, J., Luhman, T., Luhman, E., Ng, C., Wang, R., and Ramesh, A. Video generation models as world simulators. 2024. URL https://openai.com/research/ video-generation-models-as-world-simulators.\n\nBrown, T. B. Language models are few-shot learners. arXiv preprint arXiv:2005.14165, 2020.\n\nCampbell, A., Benton, J., De Bortoli, V., Rainforth, T., Deligiannidis, G., and Doucet, A. A continuous time framework for discrete denoising models. Advances in Neural Information Processing Systems, 35:28266-28279, 2022.\n\nChang, H., Zhang, H., Jiang, L., Liu, C., and Freeman, W. T. Maskgit: Masked generative image transformer. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pp. 11315-11325, 2022.\n\nChang, H., Zhang, H., Barber, J., Maschinot, A., Lezama, J., Jiang, L., Yang, M.-H., Murphy, K., Freeman, W. T., Rubinstein, M., et al. Muse: Text-to-image generation via masked generative transformers. arXiv preprint arXiv:2301.00704, 2023.\n\nChen, M., Tworek, J., Jun, H., Yuan, Q., Pinto, H. P. D. O., Kaplan, J., Edwards, H., Burda, Y., Joseph, N., Brockman, G., et al. Evaluating large language models trained on code. arXiv preprint arXiv:2107.03374, 2021.\n\nChen, T., Zhang, R., and Hinton, G. Analog bits: Generating discrete data using diffusion models with selfconditioning. arXiv preprint arXiv:2208.04202, 2022.\n\nChen, Z., Yuan, H., Li, Y., Kou, Y., Zhang, J., and Gu, Q. Fast sampling via de-randomization for discrete diffusion models. arXiv preprint arXiv:2312.09193, 2023.\n\nChu, Y., Xu, J., Yang, Q., Wei, H., Wei, X., Guo, Z., Leng, Y., Lv, Y., He, J., Lin, J., et al. Qwen2-audio technical report. arXiv preprint arXiv:2407.10759, 2024.\n\nClark, P., Cowhey, I., Etzioni, O., Khot, T., Sabharwal, A., Schoenick, C., and Tafjord, O. Think you have solved question answering? try arc, the ai2 reasoning challenge. arXiv preprint arXiv:1803.05457, 2018.\n\nCobbe, K., Kosaraju, V., Bavarian, M., Chen, M., Jun, H., Kaiser, L., Plappert, M., Tworek, J., Hilton, J., Nakano, R., et al. Training verifiers to solve math word problems. arXiv preprint arXiv:2110.14168, 2021.\n\nDeletang, G., Ruoss, A., Duquenne, P.-A., Catt, E., Genewein, T., Mattern, C., Grau-Moya, J., Wenliang, L. K., Aitchison, M., Orseau, L., et al. Language modeling is compression. In The Twelfth International Conference on Learning Representations.\n\nDevlin, J. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018.\n\nDhariwal, P. and Nichol, A. Diffusion models beat gans on image synthesis. Advances in neural information processing systems, 34:8780-8794, 2021.\n\nDieleman, S., Sartran, L., Roshannai, A., Savinov, N., Ganin, Y., Richemond, P. H., Doucet, A., Strudel, R., Dyer, C., Durkan, C., et al. Continuous diffusion for categorical data. arXiv preprint arXiv:2211.15089, 2022.\n\nDubey, A., Jauhri, A., Pandey, A., Kadian, A., Al-Dahle, A., Letman, A., Mathur, A., Schelten, A., Yang, A., Fan, A., et al. The llama 3 herd of models. arXiv preprint arXiv:2407.21783, 2024.\n\nFisher, R. A. On the mathematical foundations of theoretical statistics. Philosophical transactions of the Royal Society of London. Series A, containing papers of a mathematical or physical character, 222(594-604):309-368, 1922.\n\nGao, L., Tow, J., Abbasi, B., Biderman, S., Black, S., DiPofi, A., Foster, C., Golding, L., Hsu, J., Le Noac'h, A., Li, H., McDonell, K., Muennighoff, N., Ociepa, C., Phang, J., Reynolds, L., Schoelkopf, H., Skowron, A., Sutawika, L., Tang, E., Thite, A., Wang, B., Wang, K., and Zou, A. A framework for few-shot language model evaluation, 07 2024. URL https://zenodo.org/records/ 12608602 .\n\nGat, I., Remez, T., Shaul, N., Kreuk, F., Chen, R. T., Synnaeve, G., Adi, Y., and Lipman, Y. Discrete flow matching. arXiv preprint arXiv:2407.15595, 2024.\n\nGong, S., Li, M., Feng, J., Wu, Z., and Kong, L. Diffuseq: Sequence to sequence text generation with diffusion models. arXiv preprint arXiv:2210.08933, 2022.\n\nGong, S., Agarwal, S., Zhang, Y., Ye, J., Zheng, L., Li, M., An, C., Zhao, P., Bi, W., Han, J., et al. Scaling diffusion language models via adaptation from autoregressive models. arXiv preprint arXiv:2410.17891, 2024.\n\nGoogle. Our next-generation model: Gemini 1.5, 2024. URL https://blog.google/technology/ai/ google-gemini-next-generation-model-february-2024\n\nGraves, A., Srivastava, R. K., Atkinson, T., and Gomez, F. Bayesian flow networks. arXiv preprint arXiv:2308.07037, 2023.\n\nGulrajani, I. and Hashimoto, T. B. Likelihood-based diffusion language models. Advances in Neural Information Processing Systems, 36, 2024.\n\nGuo, D., Yang, D., Zhang, H., Song, J., Zhang, R., Xu, R., Zhu, Q., Ma, S., Wang, P., Bi, X., et al. Deepseek-r1: Incentivizing reasoning capability in llms via reinforcement learning. arXiv preprint arXiv:2501.12948, 2025.\n\nHan, X., Kumar, S., and Tsvetkov, Y. Ssd-lm: Semiautoregressive simplex-based diffusion language model for text generation and modular control. arXiv preprint arXiv:2210.17432, 2022.\n\nHe, Z., Sun, T., Wang, K., Huang, X., and Qiu, X. Diffusionbert: Improving generative masked language models with diffusion models. arXiv preprint arXiv:2211.15029, 2022.\n\nHendrycks, D., Burns, C., Basart, S., Zou, A., Mazeika, M., Song, D., and Steinhardt, J. Measuring massive multitask language understanding. arXiv preprint arXiv:2009.03300, 2020.\n\nHendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart, S., Tang, E., Song, D., and Steinhardt, J. Measuring mathematical problem solving with the math dataset. arXiv preprint arXiv:2103.03874, 2021.\n\nHo, J. and Salimans, T. Classifier-free diffusion guidance. arXiv preprint arXiv:2207.12598, 2022.\n\nHo, J., Jain, A., and Abbeel, P. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840-6851, 2020.\n\nHoffmann, J., Borgeaud, S., Mensch, A., Buchatskaya, E., Cai, T., Rutherford, E., Casas, D. d. L., Hendricks, L. A., Welbl, J., Clark, A., et al. Training compute-optimal large language models. arXiv preprint arXiv:2203.15556, 2022.\n\nHoltzman, A., Buys, J., Du, L., Forbes, M., and Choi, Y. The curious case of neural text degeneration. arXiv preprint arXiv:1904.09751, 2019.\n\nHoogeboom, E., Gritsenko, A. A., Bastings, J., Poole, B., Berg, R. v. d., and Salimans, T. Autoregressive diffusion models. arXiv preprint arXiv:2110.02037, 2021a.\n\nHoogeboom, E., Nielsen, D., Jaini, P., Forré, P., and Welling, M. Argmax flows and multinomial diffusion: Learning categorical distributions. Advances in Neural Information Processing Systems, 34:12454-12465, 2021b.\n\nHu, S., Tu, Y., Han, X., He, C., Cui, G., Long, X., Zheng, Z., Fang, Y., Huang, Y., Zhao, W., et al. Minicpm: Unveiling the potential of small language models with scalable training strategies. arXiv preprint arXiv:2404.06395, 2024.\n\nHuang, Y., Bai, Y., Zhu, Z., Zhang, J., Zhang, J., Su, T., Liu, J., Lv, C., Zhang, Y., Fu, Y., et al. C-eval: A multi-level multi-discipline chinese evaluation suite for foundation models. Advances in Neural Information Processing Systems, 36, 2024a.\n\nHuang, Y., Zhang, J., Shan, Z., and He, J. Compression represents intelligence linearly. arXiv preprint arXiv:2404.09937, 2024b.\n\nJiang, A. Q., Sablayrolles, A., Mensch, A., Bamford, C., Chaplot, D. S., Casas, D. d. l., Bressand, F., Lengyel, G.,\n\nLample, G., Saulnier, L., et al. Mistral 7b. arXiv preprint arXiv:2310.06825, 2023.\n\nKaplan, J., McCandlish, S., Henighan, T., Brown, T. B., Chess, B., Child, R., Gray, S., Radford, A., Wu, J., and Amodei, D. Scaling laws for neural language models. arXiv preprint arXiv:2001.08361, 2020.\n\nKitouni, O., Nolte, N., Hensman, J., and Mitra, B. Disk: A diffusion model for structured knowledge. arXiv preprint arXiv:2312.05253, 2023.\n\nKitouni, O., Nolte, N., Bouchacourt, D., Williams, A., Rabbat, M., and Ibrahim, M. The factorization curse: Which tokens you predict underlie the reversal curse and more. arXiv preprint arXiv:2406.05183, 2024.\n\nKou, S., Hu, L., He, Z., Deng, Z., and Zhang, H. Cllms: Consistency large language models. arXiv preprint arXiv:2403.00835, 2024.\n\nLi, H., Zhang, Y., Koto, F., Yang, Y., Zhao, H., Gong, Y., Duan, N., and Baldwin, T. Cmmlu: Measuring massive multitask language understanding in chinese. arXiv preprint arXiv:2306.09212, 2023.\n\nLi, X., Thickstun, J., Gulrajani, I., Liang, P. S., and Hashimoto, T. B. Diffusion-lm improves controllable text generation. Advances in Neural Information Processing Systems, 35:4328-4343, 2022.\n\nLin, S., Hilton, J., and Evans, O. Truthfulqa: Measuring how models mimic human falsehoods. arXiv preprint arXiv:2109.07958, 2021.\n\nLin, Z., Gong, Y., Shen, Y., Wu, T., Fan, Z., Lin, C., Duan, N., and Chen, W. Text generation with diffusion language models: A pre-training approach with continuous paragraph denoise. In International Conference on Machine Learning, pp. 21051-21064. PMLR, 2023.\n\nLiu, A., Feng, B., Xue, B., Wang, B., Wu, B., Lu, C., Zhao, C., Deng, C., Zhang, C., Ruan, C., et al. Deepseek-v3 technical report. arXiv preprint arXiv:2412.19437, 2024.\n\nLoshchilov, I. Decoupled weight decay regularization. arXiv preprint arXiv:1711.05101, 2017.\n\nLou, A. and Ermon, S. Reflected diffusion models, 2023.\nLou, A., Meng, C., and Ermon, S. Discrete diffusion language modeling by estimating the ratios of the data distribution. arXiv preprint arXiv:2310.16834, 2023.\n\nMahabadi, R. K., Ivison, H., Tae, J., Henderson, J., Beltagy, I., Peters, M. E., and Cohan, A. Tess: Text-to-text selfconditioned simplex diffusion, 2024.\n\nMeng, C., Choi, K., Song, J., and Ermon, S. Concrete score matching: Generalized score matching for discrete data. Advances in Neural Information Processing Systems, 35: $34532-34545,2022$.\n\nNie, S., Zhu, F., Du, C., Pang, T., Liu, Q., Zeng, G., Lin, M., and Li, C. Scaling up masked diffusion models on text. arXiv preprint arXiv:2410.18514, 2024.\n\nOpenAI. ChatGPT: Optimizing Language Models for Dialogue. OpenAI blog, November 2022. URL https: //openai.com/blog/chatgpt/.\n\nOpenAI. Learning to reason with llms, 2024. URL https://openai.com/index/ learning-to-reason-with-llms/.\n\nOu, J., Nie, S., Xue, K., Zhu, F., Sun, J., Li, Z., and Li, C. Your absorbing discrete diffusion secretly models the conditional distributions of clean data. arXiv preprint arXiv:2406.03736, 2024.\n\nOuyang, L., Wu, J., Jiang, X., Almeida, D., Wainwright, C., Mishkin, P., Zhang, C., Agarwal, S., Slama, K., Ray, A., et al. Training language models to follow instructions with human feedback. Advances in neural information processing systems, 35:27730-27744, 2022.\n\nPark, J. S., O’Brien, J., Cai, C. J., Morris, M. R., Liang, P., and Bernstein, M. S. Generative agents: Interactive simulacra of human behavior. In Proceedings of the 36th annual acm symposium on user interface software and technology, pp. 1-22, 2023.\n\nPeebles, W. and Xie, S. Scalable diffusion models with transformers. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pp. 4195-4205, 2023.\n\nRadford, A. Improving language understanding by generative pre-training, 2018.\n\nRadford, A., Wu, J., Child, R., Luan, D., Amodei, D., Sutskever, I., et al. Language models are unsupervised multitask learners. OpenAI blog, 1(8):9, 2019.\n\nRafailov, R., Sharma, A., Mitchell, E., Manning, C. D., Ermon, S., and Finn, C. Direct preference optimization: Your language model is secretly a reward model. Advances in Neural Information Processing Systems, 36, 2024.\n\nReid, M., Hellendoorn, V. J., and Neubig, G. Diffuser: Discrete diffusion via edit-based reconstruction, 2022.\n\nRein, D., Hou, B. L., Stickland, A. C., Petty, J., Pang, R. Y., Dirani, J., Michael, J., and Bowman, S. R. Gpqa: A graduate-level google-proof q\\&a benchmark. arXiv preprint arXiv:2311.12022, 2023.\n\nRichemond, P. H., Dieleman, S., and Doucet, A. Categorical sdes with simplex diffusion, 2022.\n\nSahoo, S. S., Arriola, M., Schiff, Y., Gokaslan, A., Marroquin, E., Chiu, J. T., Rush, A., and Kuleshov, V. Simple and effective masked diffusion language models. arXiv preprint arXiv:2406.07524, 2024.\n\nSakaguchi, K., Bras, R. L., Bhagavatula, C., and Choi, Y. Winogrande: An adversarial winograd schema challenge at scale. Communications of the ACM, 64(9):99-106, 2021.\n\nShannon, C. E. A mathematical theory of communication. The Bell system technical journal, 27(3):379-423, 1948.\n\nShazeer, N. Glu variants improve transformer. arXiv preprint arXiv:2002.05202, 2020.\n\nShi, J., Han, K., Wang, Z., Doucet, A., and Titsias, M. K. Simplified and generalized masked diffusion for discrete data. arXiv preprint arXiv:2406.04329, 2024.\n\nShih, A., Sadigh, D., and Ermon, S. Training and inference on any-order autoregressive models the right way. In Proceedings of the 31th International Conference on Machine Learning, 2022.\n\nSohl-Dickstein, J., Weiss, E., Maheswaranathan, N., and Ganguli, S. Deep unsupervised learning using nonequilibrium thermodynamics. In International conference on machine learning, pp. 2256-2265. PMLR, 2015.\n\nSong, Y., Sohl-Dickstein, J., Kingma, D. P., Kumar, A., Ermon, S., and Poole, B. Score-based generative modeling through stochastic differential equations. arXiv preprint arXiv:2011.13456, 2020.\n\nStrudel, R., Tallec, C., Altché, F., Du, Y., Ganin, Y., Mensch, A., Grathwohl, W., Savinov, N., Dieleman, S., Sifre, L., et al. Self-conditioned embedding diffusion for text generation. arXiv preprint arXiv:2211.04236, 2022.\n\nSu, J., Ahmed, M., Lu, Y., Pan, S., Bo, W., and Liu, Y. Roformer: Enhanced transformer with rotary position embedding. Neurocomputing, 568:127063, 2024.\n\nSun, H., Yu, L., Dai, B., Schuurmans, D., and Dai, H. Scorebased continuous-time discrete diffusion models. arXiv preprint arXiv:2211.16750, 2022.\n\nSuzgun, M., Scales, N., Schärli, N., Gehrmann, S., Tay, Y., Chung, H. W., Chowdhery, A., Le, Q. V., Chi, E. H., Zhou, D., et al. Challenging big-bench tasks and whether chain-of-thought can solve them. arXiv preprint arXiv:2210.09261, 2022.\n\nTouvron, H., Martin, L., Stone, K., Albert, P., Almahairi, A., Babaei, Y., Bashlykov, N., Batra, S., Bhargava, P., Bhosale, S., et al. Llama 2: Open foundation and finetuned chat models. arXiv preprint arXiv:2307.09288, 2023.\n\nUria, B., Murray, I., and Larochelle, H. A deep and tractable density estimator. In Proceedings of the 31th International Conference on Machine Learning, 2014.\n\nVaswani, A. Attention is all you need. arXiv preprint arXiv:1706.03762, 2017.\n\nWang, L., Ma, C., Feng, X., Zhang, Z., Yang, H., Zhang, J., Chen, Z., Tang, J., Chen, X., Lin, Y., et al. A survey on large language model based autonomous agents. Frontiers of Computer Science, 18(6):186345, 2024a.\n\nWang, X., Zheng, Z., Ye, F., Xue, D., Huang, S., and Gu, Q. Diffusion language models are versatile protein learners. arXiv preprint arXiv:2402.18567, 2024b.\n\nWang, X., Zheng, Z., Ye, F., Xue, D., Huang, S., and Gu, Q. Dplm-2: A multimodal diffusion protein language model. arXiv preprint arXiv:2410.13782, 2024c.\n\nWei, J., Wang, X., Schuurmans, D., Bosma, M., Xia, F., Chi, E., Le, Q. V., Zhou, D., et al. Chain-of-thought prompting elicits reasoning in large language models. Advances in neural information processing systems, 35:24824-24837, 2022.\n\nWu, T., Fan, Z., Liu, X., Gong, Y., Shen, Y., Jiao, J., Zheng, H.-T., Li, J., Wei, Z., Guo, J., Duan, N., and Chen, W. Ar-diffusion: Auto-regressive diffusion model for text generation, 2023.\n\nXu, C., Wang, X., Liao, Z., Li, Y., Hou, T., and Deng, Z. Show-o turbo: Towards accelerated unified multimodal understanding and generation. arXiv preprint arXiv:2502.05415, 2025.\n\nXue, K., Zhou, Y., Nie, S., Min, X., Zhang, X., Zhou, J., and Li, C. Unifying bayesian flow networks and diffusion models through stochastic differential equations. arXiv preprint arXiv:2404.15766, 2024.\n\nYang, A., Yang, B., Zhang, B., Hui, B., Zheng, B., Yu, B., Li, C., Liu, D., Huang, F., Wei, H., Lin, H., Yang, J., Tu, J., Zhang, J., Yang, J., Yang, J., Zhou, J., Lin, J., Dang, K., Lu, K., Bao, K., Yang, K., Yu, L., Li, M., Xue, M., Zhang, P., Zhu, Q., Men, R., Lin, R., Li, T., Xia, T., Ren, X., Ren, X., Fan, Y., Su, Y., Zhang, Y., Wan, Y., Liu, Y., Cui, Z., Zhang, Z., and Qiu, Z. Qwen2.5 technical report. arXiv preprint arXiv:2412.15115, 2024.\n\nYe, J., Zheng, Z., Bao, Y., Qian, L., and Gu, Q. Diffusion language models can perform many tasks with scaling and\ninstruction-finetuning. arXiv preprint arXiv:2308.12219, 2023a.\n\nYe, J., Zheng, Z., Bao, Y., Qian, L., and Wang, M. Dinoiser: Diffused conditional sequence learning by manipulating noises. arXiv preprint arXiv:2302.10025, 2023b.\n\nYe, T., Xu, Z., Li, Y., and Allen-Zhu, Z. Physics of Language Models: Part 2.1, Grade-School Math and the Hidden Reasoning Process. ArXiv e-prints, abs/2407.20311, July 2024. Full version available at http://arxiv. org/abs/2407.20311.\n\nZellers, R., Holtzman, A., Bisk, Y., Farhadi, A., and Choi, Y. Hellaswag: Can a machine really finish your sentence? arXiv preprint arXiv:1905.07830, 2019.\n\nZhang, B. and Sennrich, R. Root mean square layer normalization. Advances in Neural Information Processing Systems, 32, 2019.\n\nZhao, W. X., Zhou, K., Li, J., Tang, T., Wang, X., Hou, Y., Min, Y., Zhang, B., Zhang, J., Dong, Z., et al. A survey of large language models. arXiv preprint arXiv:2303.18223, 2023.\n\nZheng, K., Chen, Y., Mao, H., Liu, M.-Y., Zhu, J., and Zhang, Q. Masked diffusion models are secretly timeagnostic masked models and exploit inaccurate categorical sampling, 2024. URL https://arxiv.org/ abs/2409.02908.\n\nZheng, L., Yuan, J., Yu, L., and Kong, L. A reparameterized discrete diffusion model for text generation. ArXiv, abs/2302.05737, 2023."
    },
    {
      "id": 2,
      "title": "Algorithm 1 Pre-training of LLaDA",
      "content": "# Algorithm 1 Pre-training of LLaDA\n\n## Require: mask predictor $p_{\\theta}$, data distribution $p_{\\text {data }}$\nrepeat\n: $x_{0} \\sim p_{\\text {data }}, t \\sim \\mathrm{U}(0,1]$\n\\# with a probability of $1 \\%$, the sequence length of $x_{0}$ follows $\\mathrm{U}[1,4096]$\n3: $\\quad x_{t} \\sim q_{t \\mid 0}\\left(x_{t} \\mid x_{0}\\right)$\n\\# $q_{t \\mid 0}$ is defined in Eq. (7)\n4: Calculate $\\mathcal{L}=-\\frac{1}{t * L} \\sum_{i=1}^{L} \\mathbf{1}\\left[x_{t}^{i}=\\mathrm{M}\\right] \\log p_{\\theta}\\left(x_{0}^{i} \\mid x_{t}\\right)$\n\\# $L$ is the sequence length of $x_{0}$\n5: Calculate $\\nabla_{\\theta} \\mathcal{L}$ and run optimizer.\n6: until Converged\n7: Return $p_{\\theta}$\n\n## Algorithm 2 Supervised Fine-Tuning of LLaDA\n\n## Require: mask predictor $p_{\\theta}$, pair data distribution $p_{\\text {data }}$\n: repeat\n: $p_{0}, r_{0} \\sim p_{\\text {data }}, t \\sim \\mathrm{U}(0,1]$\n\\# please refer to Appendix B. 1 for details on the SFT data processing.\n3: $\\quad r_{t} \\sim q_{t \\mid 0}\\left(r_{t} \\mid r_{0}\\right)$\n\\# $q_{t \\mid 0}$ is defined in Eq. (7)\n4: Calculate $\\mathcal{L}=-\\frac{1}{t * L^{\\prime}} \\sum_{i=1}^{L^{\\prime}} \\mathbf{1}\\left[r_{t}^{i}=\\mathrm{M}\\right] \\log p_{\\theta}\\left(r_{0}^{i} \\mid p_{0}, r_{t}\\right)$\n\\# $L^{\\prime}$ is the sequence length of $r_{0}$\n5: Calculate $\\nabla_{\\theta} \\mathcal{L}$ and run optimizer.\n6: until Converged\n7: Return $p_{\\theta}$\n\n## Algorithm 3 Conditional Log-likelihood Evaluation of LLaDA\n\nRequire: mask predictor $p_{\\theta}$, prompt $p_{0}$, response $r_{0}$, the number of Monte Carlo estimations $n_{m c}$\n: $\\log$. likelihood $=0$\n2: for $i \\leftarrow 1$ to $n_{m c}$ do\n3: $\\quad l \\sim\\{1,2, \\ldots, L\\}$\n\\# $L$ is the sequence length of $r_{0}$\n4: Obtain $r_{l}$ by uniformly sampling $l$ tokens from $r_{0}$ without replacement for masking\n5: $\\quad \\log$. likelihood $=\\log$. likelihood $+\\frac{L}{l} \\sum_{i=1}^{L} \\mathbf{1}\\left[r_{l}^{i}=\\mathrm{M}\\right] \\log p_{\\theta}\\left(r_{0}^{i} \\mid p_{0}, r_{l}\\right)$\n6: end for\n7: $\\log$. likelihood $=\\log$. likelihood $/ n_{m c}$\n8: Return $\\log$. likelihood\n\n## A. Formulation of Masked Diffusion Models\n\n## A.1. Training\n\nMasked diffusion models (MDMs) (Austin et al., 2021a; Lou et al., 2023; Ou et al., 2024) define the model distribution $p_{\\theta}\\left(x_{0}\\right)$ in a manner distinct from autoregressive models.\n\nThese models introduce a forward process $\\left\\{x_{t}\\right\\}$ indexed by a time $t \\in[0,1]$. This process gradually and independently masks all tokens in the sequence $x_{0}$. At time $t=0$, the data point $x_{0}$ is fully observed with no masks, while for $t \\in(0,1]$, $x_{t}$ represents latent variables with varying mask ratios in expectation.\n\nFormally, the conditional distribution of $x_{t}$ given $x_{0}$ is defined by a fully factorized form:\n\n$$\nq_{t \\mid 0}\\left(x_{t} \\mid x_{0}\\right)=\\prod_{i=1}^{L} q_{t \\mid 0}\\left(x_{t}^{i} \\mid x_{0}^{i}\\right)\n$$\n\nwhere the conditional distribution for each token is given by:\n\n$$\nq_{t \\mid 0}\\left(x_{t}^{i} \\mid x_{0}^{i}\\right)= \\begin{cases}1-t, & x_{t}^{i}=x_{0}^{i} \\\\ t, & x_{t}^{i}=\\mathrm{M}\\end{cases}\n$$\n\nHere, M denotes the mask token. Intuitively, each token either remains unchanged or is masked, with the probability of"
    },
    {
      "id": 3,
      "title": "Algorithm 4 Reverse Process of LLaDA",
      "content": "# Algorithm 4 Reverse Process of LLaDA\n\n## Require: mask predictor $p_{\\theta}$, prompt $p_{0}$, answer length $L$, sampling steps $N$\n1: Set $r_{1}$ is a fully masked sequence of length $L$.\n2: for $t \\leftarrow 1$ down to $\\frac{1}{N}$ step $\\frac{1}{N}$ do\n3: $\\quad s=t-\\frac{1}{N}$\n4: $\\quad r_{0}=\\arg \\max _{r_{0}} p_{\\theta}\\left(r_{0} \\mid p_{0}, r_{t}\\right) \\quad$ \\# we employ greedy sampling when predicting masked tokens\n5: for $i \\leftarrow 1$ to $L$ do\n6: $\\quad$ if $r_{t} \\neq \\mathrm{M}$ then\n7: $\\quad r_{0}^{i}=r_{t}^{i}$\n8: else\n9: $\\quad$ With probability $\\frac{s}{t}, r_{0}^{i}$ is set to M\n10: end if\n11: end for\n12: $\\quad r_{s}=r_{0}$\n13: end for\n14: Return $r_{0}$\nbeing masked increasing linearly as $t$ progresses from 0 to 1 . At $t=1$, all tokens are guaranteed to be masked, meaning that $x_{1}$ follows a Dirac distribution concentrated on a sequence of fully masked tokens. Notably, the linear masking probability is analogous to but distinct from, the noise schedule in continuous diffusion models (Sohl-Dickstein et al., 2015; Ho et al., 2020; Song et al., 2020). This linearity is motivated by the assumption that the information in the text is proportional to the number of tokens on average, making it reasonable to lose information linearly during the forward process.\n\nThe forward process is not only reversible but also corresponds to a reverse process that is fully factorized across all tokens (Austin et al., 2021a). The reverse process, from time $t=1$ to 0 , generates new data from sequences of fully masked tokens. The conditional distribution for the reverse process, for $0 \\leq s<t \\leq 1$, is factorized as:\n\n$$\nq_{s \\mid t}\\left(x_{s} \\mid x_{t}\\right)=\\prod_{i=1}^{L} q_{s \\mid t}\\left(x_{s}^{i} \\mid x_{t}\\right)\n$$\n\nwhere the conditional distribution for each token is:\n\n$$\nq_{s \\mid t}\\left(x_{s}^{i} \\mid x_{t}\\right)= \\begin{cases}1, & x_{t}^{i} \\neq \\mathrm{M}, x_{s}^{i}=x_{t}^{i} \\\\ \\frac{s}{t}, & x_{t}^{i}=\\mathrm{M}, x_{s}^{i}=\\mathrm{M} \\\\ \\frac{t-s}{t} q_{0 \\mid t}\\left(x_{s}^{i} \\mid x_{t}\\right), & x_{t}^{i}=\\mathrm{M}, x_{s}^{i} \\neq \\mathrm{M} \\\\ 0, & \\text { otherwise }\\end{cases}\n$$\n\nThus, the key function to estimate is the conditional distribution $q_{0 \\mid t}\\left(x_{s}^{i} \\mid x_{t}\\right)$, which predicts the original token if it is masked in the input $x_{t}$. This is analogous to the data prediction form in continuous diffusion models.\n\nAs proven in (Ou et al., 2024), an equivalent yet time-free parameterization can be derived as:\n\n$$\nq_{0 \\mid t}\\left(x_{s}^{i} \\mid x_{t}\\right)=p_{\\text {data }}\\left(x_{0}^{i} \\mid x_{t}^{\\mathrm{UM}}\\right), \\quad \\forall i \\text { such that } x_{t}^{i}=\\mathrm{M}\n$$\n\nwhere $x_{t}^{\\mathrm{UM}}$ denotes the collection of unmasked tokens in $x_{t}$, which is identical to the corresponding tokens in the original data $x_{0}$ since unmasked tokens are solely determined by $x_{0}$ and are independent of time $t$. Intuitively, this implies that estimating the data prediction function is equivalent to estimating the conditional distributions on clean data, which is time-invariant. Consequently, the time $t$ need not be provided as input to the parametric model.\n\nAlthough the development of masked diffusion is nontrivial, the implementation is straightforward. We first introduce the mask predictor, a parametric model $p_{\\theta}\\left(\\cdot \\mid x_{t}\\right)$ (e.g., a Transformer without a causal mask), which takes $x_{t}$ for any $t$ as input and predict all masked tokens simultaneously. Then, we define the model distribution $p_{\\theta}\\left(x_{0}\\right)$ as follows: starting with $x_{1}$ as a sequence of fully masked tokens, we simulate an approximate reverse process parameterized by $p_{\\theta}\\left(\\cdot \\mid x_{t}\\right)$ from $t=1$ to 0 . The marginal distribution induced at $t=0$ then represents the model distribution $p_{\\theta}\\left(x_{0}\\right)$."
    },
    {
      "id": 4,
      "title": "Algorithm 5 Low-confidence Remasking Strategy of LLaDA",
      "content": "# Algorithm 5 Low-confidence Remasking Strategy of LLaDA\n\n## Require: mask predictor $p_{\\theta}$, prompt $p_{0}$, answer length $L$, sampling steps $N$\n1: Set $r_{1}$ is a fully masked sequence of length $L$.\n2: for $t \\leftarrow 1$ down to $\\frac{1}{N}$ step $\\frac{1}{N}$ do\n3: $\\quad s=t-\\frac{1}{N}$\n4: for $i \\leftarrow 1$ to $L$ do\n5: $\\quad$ if $r_{t}^{i} \\neq \\mathrm{M}$ then\n6: $\\quad r_{0}^{i}=r_{t}^{i}, c^{i}=1$\n7: else\n8: $\\quad r_{0}^{i}=\\arg \\max _{r_{0}^{i}} p_{\\theta}\\left(r_{0}^{i} \\mid p_{0}, r_{t}\\right)$\n9: $\\quad c^{i}=p_{\\theta}\\left(r_{0}^{i} \\mid p_{0}, r_{t}\\right)_{r_{0}^{i}}$\n10: end if\n11: end for\n12: $\\quad n_{u n}=\\lfloor L(1-s)\\rfloor$"
    },
    {
      "id": 5,
      "title": "the number of unmasked tokens is $n_{u n}$ in timestep $s$",
      "content": "# the number of unmasked tokens is $n_{u n}$ in timestep $s$\n13: for $i \\leftarrow 1$ to $L$ do\n14: $\\quad$ if $c^{i} \\in$ Lowest $-n_{u n}\\left(\\left\\{c^{i}\\right\\}_{1}^{L}\\right)$ then\n15: $\\quad r_{0}^{i}=\\mathrm{M}$"
    },
    {
      "id": 6,
      "title": "the $n_{u n}$ positions with the least confidence are selected for remasking.",
      "content": "# the $n_{u n}$ positions with the least confidence are selected for remasking.\n16: end if\n17: end for\n18: $\\quad r_{s}=r_{0}$\n19: end for\n20: Return $r_{0}$\n\n## Formally, the mask predictor is trained using a cross-entropy loss with masking:\n\n$$\n\\mathcal{L}(\\theta) \\triangleq-\\mathbb{E}_{t, x_{0}, x_{t}}\\left[\\frac{1}{t} \\sum_{i=1}^{L} \\mathbf{1}\\left[x_{t}^{i}=\\mathrm{M}\\right] \\log p_{\\theta}\\left(x_{0}^{i} \\mid x_{t}\\right)\\right]\n$$\n\nwhere $x_{0}$ is sampled from the training data, $t$ is sampled uniformly from $[0,1]$, and $x_{t}$ is sampled from $q_{t \\mid 0}\\left(x_{t} \\mid x_{0}\\right)$. The indicator function $\\mathbf{1}[\\cdot]$ ensures that the cross-entropy loss is computed only for masked tokens. In Ou et al. (2024), it has been proven that the loss function $\\mathcal{L}(\\theta)$ is an upper bound on the negative log-likelihood of the model distribution:\n\n$$\n-\\mathbb{E}_{x_{0} \\sim p_{\\text {den }\\left(x_{0}\\right)}}\\left[\\log p_{\\theta}\\left(x_{0}\\right)\\right] \\leq \\mathcal{L}(\\theta)\n$$\n\nIn summary, this principled approach trains a generative model by progressively masking tokens during a forward process and learning to recover the data distribution during a reverse process, all under the (approximate) maximum likelihood estimation framework.\n\n## A.2. Inference\n\nThe cross-entropy loss in Eq. (12) has several equivalent forms (Ou et al., 2024). The first one is given by\n\n$$\n-\\mathbb{E}_{l \\sim\\{1,2, \\ldots, L\\}, x_{0}, x_{l}}\\left[\\frac{L}{l} \\sum_{i=1}^{L} \\mathbf{1}\\left[x_{l}^{i}=\\mathrm{M}\\right] \\log p_{\\theta}\\left(x_{0}^{i} \\mid x_{l}\\right)\\right]\n$$\n\nwhere $l$ is uniformly sampled from $\\{1,2, \\ldots, L\\}$, and $x_{l}$ is obtained by uniformly sampling $l$ tokens from $x_{0}$ without replacement for masking. Despite masking exactly $l$ tokens is different from masking each token independently with probability $t$, these two masking methods lead to equivalent results in expectation (Ou et al., 2024).\nWhile Eq. (12) and Eq. (14) share the same expectation, their variances differ. Intuitively, in Eq. (12), we expect $x_{t}$ to have a fraction of $t$ tokens masked. However, the randomness of the forward process (i.e., Eq. (7)) often causes deviations, especially when $x_{t}$ contains few tokens. In contrast, in Eq. (14), the fraction of masked tokens in $x_{l}$ is deterministically $\\frac{l}{L}$. While a theoretical analysis depends on the data distribution, empirical results show that Eq. (12) requires over 1000 Monte Carlo estimates for stable results, whereas Eq. (14) achieves stability with only 128 estimates. In addition, we can simply modify Eq. (14) to its conditional version (i.e., Eq. (6)) based on Eq. (5).\n\n![img-3.jpeg](img-3.jpeg)\n\nFigure 4. A Conceptual Overview of the Semi-autoregressive Sampling.\n\nAny-order autoregressive models (AO-ARM) (Uria et al., 2014; Hoogeboom et al., 2021a; Shih et al., 2022) characterize the joint distribution autoregressively for all possible orders $\\pi$ of the $L$ variables. To learn such a distribution, an AO-ARM utilizes a weight-sharing neural network to model all univariate conditionals and employs mask tokens to represent absent variables. During training, the expected negative log-likelihood over the uniform distribution of all orders $U_{\\pi}$ is minimized:\n\n$$\n-\\mathbb{E}_{x_{0}, \\pi \\sim U_{\\pi}}\\left[\\sum_{i=1}^{L} \\log p_{\\theta}\\left(x_{0}^{\\pi(i)} \\mid x_{0}^{\\pi(<i)} ; \\pi\\right)\\right]\n$$\n\nIntuitively, $x_{0}^{\\pi(<i)}$ can be understood as a masked token $x_{t}$ with index in $\\pi(\\geq i)$ being masked. It can be further proved that Eq. (15) is equivalent to Eq. (12). This connection explains the bidirectional reasoning capabilities of LLaDA, even though it was never used explicitly in the inference procedure.\n\nNie et al. (2024) introduce unsupervised classifier-free guidance, a plug-and-play technique that balances alignment with prompts and text diversity. Specifically, unsupervised classifier-free guidance employs the following modified mask predictor for inference:\n\n$$\n\\tilde{p}_{\\theta}\\left(r_{0} \\mid p_{0}, r_{t}\\right) \\propto \\frac{p_{\\theta}\\left(r_{0} \\mid p_{0}, r_{t}\\right)^{1+w}}{p_{\\theta}\\left(r_{0} \\mid m, r_{t}\\right)^{w}}\n$$\n\nwhere $m$ is a mask sequence of the same length as $p_{0}$ and $w$ is a hyperparameter that controls the strength of $p_{0}$. We employ unsupervised classifier-free guidance in the downstream tasks, as detailed in Appendix B.5."
    },
    {
      "id": 7,
      "title": "A.3. Algorithms",
      "content": "# A.3. Algorithms\n\nIn this section, we present the training and inference algorithms. Specifically, we introduce the pre-training and supervised fine-tuning algorithms in Algorithm 1 and Algorithm 2, respectively. In addition, the likelihood evaluation algorithm is provided in Algorithm 3. Finally, we present the sampling algorithms in Algorithm 4 and Algorithm 5, which correspond to the original reverse process (i.e., random remasking) and the low-confidence remasking strategy (Chang et al., 2022) of LLaDA, respectively.\n\nFurthermore, we apply a semi-autoregressive remasking strategy for the instruct model. Specifically, the sequence is divided into several blocks and generated from left to right. Within each block, we apply the random remasking or the low-confidence remasking strategy for sampling. For clarity and better visualization, we illustrate the semi-autoregressive sampling process in Fig. 4.\n\nOur semi-autoregressive remasking strategy is inspired by the prior work of Anonymous (2025). However, it is important to note that Anonymous (2025) and LLaDA have entirely different training objectives and network architectures. Specifically, the pre-training objective of Anonymous (2025) differs from Eq. (3). Moreover, their approach incorporates a causal mask in the Transformer attention block, whereas LLaDA employs a bidirectional Transformer.\n\nTable 5: Model Architecture. We provide the configurations of our 1B and 7B ARM baselines, as well as the 1B and 8B LLaDA and the 8B LLaMA3 models.\n\n|  | Our ARM Baseline 1B | LLaDA 1B | Our ARM Baseline 7B | LLaDA 8B | LLaMA3 8B |\n| --- | --- | --- | --- | --- | --- |\n|  Layers | 22 | 22 | 28 | 32 | 32 |\n| Model dimension | 2048 | 2048 | 4096 | 4096 | 4096 |\n| Attention heads | 32 | 32 | 32 | 32 | 32 |\n| Vocabulary size | 126,464 | 126,464 | 126,464 | 126,464 | 128,000 |\n| FFN dimension | 5634 | 5634 | 13,440 | 12,288 | 14,336 |\n| Key/Value heads | 4 | 4 | 8 | 32 | 8 |\n| Total parameters | 1.49 B | 1.49 B | 6.83 B | 8.02 B | 8.03 B |\n| Non-embedding parameters | 0.97 B | 0.97 B | 5.80 B | 6.98 B | 6.98 B |\n\n## B Experiments\n\n### B.1 Details of SFT Data\n\nA dynamic sequence length is employed during supervised SFT, where [EOS] tokens are appended to the end of short pairs to ensure equal sequence lengths across all data in each mini-batch. Notably, the padding [EOS] tokens are treated as part of the response, i.e., masked and included in the training objective. The [EOS] tokens are removed from the generated outputs during sampling. This strategy is crucial for LLaDA and ensures that the model learns to control the length of its responses by generating [EOS], enabling the response length to align effectively with the given prompt.\n\nIn addition, for $n$-turn dialogues $(p_{0}^{0},r_{0}^{0},p_{0}^{1},r_{0}^{1}, \\ldots, p_{0}^{n-1}, r_{0}^{n-1})$, we treat it as $n$ single-turn dialogue pairs, i.e., $\\left(p_{0}^{0}, r_{0}^{0}\\right),\\left(p_{0}^{0} r_{0}^{0} p_{0}^{1}, r_{0}^{1}\\right), \\ldots,\\left(p_{0}^{0} r_{0}^{0} p_{0}^{1} r_{0}^{1} \\ldots p_{0}^{n-1}, r_{0}^{n-1}\\right)$ and randomly sample one. This data partitioning strategy not only equips LLaDA with multi-turn dialogue capabilities but also aligns with the padding strategy.\n\n### B.2 Architectures and Scaling Experiments\n\nThis section provides detailed information about the models we trained and the scalability experiments described in Sec. 3.1.\n\nFirstly, for efficiency, we trained an ARM and a MDM, both with 1.5B parameters and identical architectures. Additionally, we scaled the MDM to 8B parameters. Due to computational resource constraints, we did not train an 8B autoregressive model with the same architecture. Instead, we utilized our previously trained 7B autoregressive model for comparison. These four models are utilized in the scalability analysis in Sec. 3.1.\n\nWe adopted a Transformer architecture similar to LLaMA (Touvron et al., 2023; Dubey et al., 2024) for the ARMs and MDMs we trained. Specifically, we employ RMSNorm (Zhang & Sennrich, 2019) to stabilize training, used SwiGLU (Shazeer, 2020) as the activation function to enhance non-linearity, and integrate RoPE (Su et al., 2024) for more expressive positional encoding. Tab. 5 provides an overview of the model architectures.\n\nAdditionally, we employ the widely used $6 N D$ formulation (Kaplan et al., 2020; Hoffmann et al., 2022) to calculate the training FLOPs in Fig. 3, where $N$ represents the number of non-embedding parameters, and $D$ denotes the total number of training tokens.\n\n### B.3 Details and Ablation on Remasking\n\nThis section first explains the inference methods in detail, followed by ablation studies on various remasking strategies.\n\nFor instruct model, since our training includes a large number of [EOS] tokens, directly applying the lowest confidence remasking strategy would result in an excessively high and unnatural occurrence of [EOS] tokens in the generated sentences. Therefore, we divide the entire generation length into several blocks. Each block is generated from left to right, and within each block, we apply the reverse process to perform sampling. However, for the base model, since [EOS] tokens are not padded during training, using the semi-autoregressive remasking strategy makes little difference in the results.\n\nTable 6. Ablation on Remasking. We use GSM8K accuracy as the evaluation metric. The lowest-confidence \\& semi-autoregressive remasking strategy refers to generating each block from left to right, while applying the lowest-confidence remasking strategy within each block.\n\n|  | LLaDA 8B Base | LLaDA 8B Instruct |\n| :-- | :--: | :--: |\n| Randomly remasking | 52.3 | 72.0 |\n| Lowest confidence remasking | $\\mathbf{6 4 . 7}$ | 12.9 |\n| Lowest confidence \\& semi-autoregressive remasking | 64.4 | $\\mathbf{7 3 . 8}$ |\n\nTable 7. Ablation on Generated Length. We use the GSM8K accuracy as the evaluation metric and set the number of sampling steps to half of the generated length.\n\n| Length | LLaDA 8B Base | LLaDA 8B Instruct |\n| :-- | :--: | :--: |\n| 256 | 62.5 | 75.3 |\n| 512 | 64.7 | 73.8 |\n| 1024 | 65.9 | 75.3 |\n\nFor efficiency, we set the answer length to 512 and the number of sampling steps to 256 in our ablation studies. For the semi-autoregressive remasking strategy, we set the block length to 32 . To simplify the evaluation, we use GSM8K accuracy as the performance metric. As shown in Table 6, for the base model, applying the lowest confidence remasking strategy significantly improves performance, whereas the semi-autoregressive remasking strategy does not yield any noticeable benefits. In contrast, for the instruct model, directly applying the lowest confidence remasking strategy leads to a substantial performance drop. However, combining the lowest confidence remasking strategy with the semi-autoregressive remasking strategy results in the best performance for the instruct model.\n\nWe provide the specific remasking strategies and hyperparameters used for each benchmark in Appendix B.5."
    },
    {
      "id": 8,
      "title": "B.4. Ablation on Generated Length",
      "content": "# B.4. Ablation on Generated Length\n\nIn this section, we conduct ablation studies on the generated length. For simplicity, we use GSM8K as the evaluation metric. To ensure efficiency and fairness, for each setting, we set the number of sampling steps to half of the generated length, ensuring that in each sampling step, two tokens are transferred from the mask to the text.\n\nFor the LLaDA 8B Base model, we employ the lowest-confidence remasking strategy (i.e., Algorithm 5). For the LLaDA 8B Instruct model, we adopt semi-autoregressive sampling with a block length of 32.\n\nAs reported in Tab. 7, both the Base model and the Instruct model exhibit minimal sensitivity to the length hyperparameter.\n\n## B.5. Standard Benchmarks and Evaluation\n\nIn this section, we briefly introduce the benchmarks used in our study and describe the details of our evaluation process.\nFollowing standard LLM (Chu et al., 2024; Yang et al., 2024) evaluation practices, we assess LLaDA across four dimensions:\nGeneral ability: MMLU (Hendrycks et al., 2020), BBH (Suzgun et al., 2022), ARC-C (Clark et al., 2018), Hellaswag (Zellers et al., 2019), TruthfulQA (Lin et al., 2021), WinoGrande (Sakaguchi et al., 2021) and PIQA (Bisk et al., 2020).\n\nMath and science ability: GSM8K (Cobbe et al., 2021), Math (Hendrycks et al., 2021) and GPQA (Rein et al., 2023).\nCode generation: HumanEval (Chen et al., 2021), HumanEval-FIM (Bavarian et al., 2022) and MBPP (Austin et al., 2021b).\n\nChinese understanding: CMMLU (Li et al., 2023) and C-Eval (Huang et al., 2024a).\nFor all the aforementioned benchmarks, we follow the widely adopted evaluation process (Gao et al., 2024) used in LLM assessments, primarily employing conditional likelihood estimation and conditional generation. Specifically, for certain benchmarks, a prompt and multiple candidate answers are provided, and the model is required to compute each candidate's\n\nTable 8. Inference Configuration for LLaDA 8B Instruct. We apply the low-confidence remasking strategy across all datasets. A block length smaller than the answer length indicates the use of the semi-autoregressive remasking strategy; otherwise, it is not applied. The shorter answer lengths for MMLU and HellaSwag result from their requirement to generate only a single token (i.e., A, B, C, or D) and two special end tokens (i.e., end of the model response and end of the sentence).\n\n|  | Answer length | Block length |\n| :-- | :--: | :--: |\n## | MMLU | 3 | 3 |\n| Hellaswag | 3 | 3 |\n## | GPQA | 128 | 64 |\n## | GSM8K | 256 | 8 |\n| HumanEval | 512 | 32 |\n## | MBPP | 512 | 32 |\n| Math | 256 | 256 |\n| MMLU-pro | 256 | 256 |\n## | ARC-C | 512 | 512 |\n\nTable 9. Comparison on iGSM Dataset.\n\n|  | 4 steps | 5 steps | 6 steps |\n| :-- | :--: | :--: | :--: |\n| LLaMA3 8B Base | 38.0 | 35.0 | 34.0 |\n| LLaDA 8B Base | $\\mathbf{6 4 . 0}$ | $\\mathbf{4 1 . 0}$ | $\\mathbf{4 4 . 0}$ |\n\nconditional likelihood. The candidate with the highest likelihood is then selected as the model's final answer, and accuracy is used as the evaluation metric. For the remaining benchmarks, the model generates responses based on the given prompt, and performance is evaluated using metrics such as exact match and other relevant criteria.\n\nFor the base model, we use conditional likelihood estimation for MMLU, CMMLU, C-Eval, ARC-C, Hellaswag, TruthfulQA, WinoGrande, PIQA, and GPQA, while the remaining benchmarks are evaluated using conditional generation. For the instruct model, we evaluate all benchmarks using conditional generation. For datasets evaluated with conditional likelihood estimation, we adopt the widely used lm-evaluation-harness (Gao et al., 2024) framework. However, for datasets evaluated with conditional generation, we rely on an internal library for evaluation, as lm-evaluation-harness lacks implementations for certain key metrics (e.g., HumanEval-FIM).\n\nFor benchmarks evaluated using conditional likelihood estimation, we use Monte Carlo estimation to approximate Eq. (6) for conditional likelihood estimation. Since MMLU, CMMLU, and C-EVAL only require the likelihood of a single token, a single Monte Carlo estimate is sufficient for these benchmarks. For all other benchmarks, we find that 128 Monte Carlo samples are adequate to produce stable results. For ARC-C, Hellaswag, TruthfulQA, WinoGrande, PIQA, and GPQA, we report the results with the optimal unsupervised classifier-free guidance scale searched in $\\{0,0.5,1,1.5,2\\}$.\n\nFor benchmarks evaluated using conditional generation, we apply the lowest confidence remasking strategy to the base model, setting both the response length and the number of sampling steps to 1024. For the instruct model, we set the sampling steps equal to the answer length and provide the inference hyperparameters in Table 8. Due to computational resource constraints, we do not use the unsupervised classifier-free guidance for these benchmarks evaluated using conditional generation."
    },
    {
      "id": 9,
      "title": "B.6. Analysis of Sampling Steps",
      "content": "# B.6. Analysis of Sampling Steps\n\nIn this section, we analyze the impact of sampling steps. For simplicity, we use the LLaDA 8B Base model and evaluate it on the GSM8K and HumanEval datasets. Additionally, we fix the answer length at 1024. As shown in Fig. 5, as the number of sampling steps increases to match the answer length, the model's accuracy improves accordingly.\n\n## B.7. Evaluation on iGSM Dataset\n\nTo further assess the mathematical capabilities of LLaDA, we test its performance on iGSM (Ye et al., 2024), an infinite, synthetic GSM8K-like dataset. iGSM is generated via specific rules, with parameters that control the difficulty of problems (i.e., the number of solution steps). For evaluation consistency, we append \"#### \\$answer\" to the final solution, adhering to\n\n![img-4.jpeg](img-4.jpeg)\n\nFigure 5. Analysis of Sampling Steps.\nthe GSM8K format. Below is an example with solution steps set to 4:\n(Question) The number of each North Star Elementary's Cultural Studies Classroom equals 1. The number of each Westridge Elementary's Dance Studio equals 3 times as much as the sum of each North Star Elementary's Classroom and each North Star Elementary's Cultural Studies Classroom. How many Dance Studio does Westridge Elementary have?\n(Solution) Define North Star Elementary's Cultural Studies Classroom as x; so $\\mathrm{x}=1$.\nDefine North Star Elementary's Classroom as m; so $\\mathrm{m}=\\mathrm{x}=1$.\nDefine Westridge Elementary's Dance Studio as $\\mathrm{n} ; \\mathrm{w}=\\mathrm{m}+\\mathrm{x}=1+1=2$;\nso $\\mathrm{n}=3^{*} \\mathrm{w}=3^{*} 2=1$ \\#\\#\\#\\# 1\n\nSince there are slight differences between GSM8K and iGSM (e.g., the use of a mod 5 algorithmic system), we follow (Ye et al., 2024) and provide a system prompt along with four-shot question-answer pairs for each problem.\n(Prompt) You're an expert at solving elementary math problems involving addition, subtraction, and multiplication. You solve all the problems in a uniform format. All calculations are done modulo 5. For example, $4+4$ equals $3,2+4$ equals $1,3+3+3$ equals $4,3 * 3$ equals 4 , and $2 * 2$ equals 4 . When providing your solution, please end with '\\#\\#\\#\\# x.' where x is your final answer, an integer between 0 and 4 . You must solve all the problems using the same solution format. Our scenarios involve up to four categories of objects: schools, classrooms, backpacks and stationeries. Each school may contain classrooms, each classroom may contain backpacks, and each backpack may contain stationeries. We can specify quantities, such as the number of dance studios at each Lakeshore High.Assume that every entity with the same name has an identical configuration; for example, each Lakeshore High contains the same number of dance studios. Another guiding principle is that what is not mentioned does not exist: when we refer to classrooms at Lakeshore High, we are only discussing the classrooms explicitly mentioned in our scenario. Furthermore, if Lakeshore High is not even mentioned, any classroom within it is automatically considered to be non-existent (i.e. 0).\n\nFor solution steps ranging from 4 to 6 , we generate 100 questions for each case and report the corresponding accuracy in Table 9. As shown in the table, LLaDA Base demonstrates significant and consistent advantages over LLaMA3 on unseen mathematical problems, aligning with the results in Table 1."
    },
    {
      "id": 10,
      "title": "B.8. Poem Completion Tasks",
      "content": "# B.8. Poem Completion Tasks\n\nIn this section, we present examples from our poem completion dataset as follows.\n## Example 1:\n## Prompt: 窈窕淑女的下一句是什么？直接输出句子即可。\n## Answer: 君子好逑。\n\nTable 10. Visualization of the Semi-Autoregressive Sampling Process. In the response of LLaDA, darker colors indicate tokens predicted in the later stages of sampling, while lighter colors correspond to earlier predictions.\n\n| User <br> LLaDA | What are the benefits of regular exercise for physical and mental health? |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n|  | Regular exercise can improve physical health by strengthening muscles and bones |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n|  | improving cardiovascular health , and reducing the risk of chronic diseases such as |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n|  | diabetes and heart disease . It can also improve mental health by reducing stress |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n|  | and anxiety , improving mood and enhancing cognitive function . Additionally |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n|  | exercise can improve sleep quality and increase energy levels |  |  |  |  |  |  |  |  |  |  |  |  |  |  |\n\nTable 11. Visualization of the Multi-turn Dialogue. We employ random remasking strategy. In the response of LLaDA, darker colors indicate tokens predicted in the later stages of sampling, while lighter colors correspond to earlier predictions.\n\n| User | I want to have a pet, but I don't know whether to get a cat or a dog. Do you have any suggestions? |\n| :--: | :--: |\n| LLaDA | ![img-5.jpeg](img-5.jpeg) |\n| User | I'm very busy at work, so it seems like a cat would be a more suitable option. Do you have any suggestions for getting a cat? |\n| LLaDA | ![img-6.jpeg](img-6.jpeg) |\n\n## Example 2:\n## Prompt: 不拘一格降人才的上一句是什么？直接输出句子即可。\n## Answer: 我劝天公重抖擞。"
    },
    {
      "id": 11,
      "title": "B.9. More Case Studies",
      "content": "# B.9. More Case Studies\n\nIn this section, we present additional case studies of LLaDA 8B Instruct. First, Tab. 10 illustrates the sampling process of semi-autoregressive remasking, while Tab. 11 depicts the sampling process for multi-turn dialogues with random remasking. Additionally, Tab. 12 and Tab. 13 provide further examples of single-turn and multi-turn dialogues. Finally, Tab. 14 presents examples of poem reversal completions where the LLaDA 8B Instruct model succeeds, in contrast to the failure of GPT-4o.\n\nTable 12. Single-turn Dialogue Cases of LLaDA 8B Instruct.\n\n| Daily life |  |\n| :--: | :--: |\n| User | What's a piece of advice you've received that you've found helpful? |\n| LLaDA | One helpful piece of advice I've received is to always be open to learning and growth. I've found that being willing to explore new ideas and experiences has helped me become more resilient and adaptable. By embracing a growth mindset, I've been able to identify opportunities for improvement and development, both personally and professionally. |\n| Daily life |  |\n| User | Please recommend me three famous movies |\n| LLaDA | Certainly! Here are three famous movies that have achieved widespread popularity and critical acclaim: <br> 1. **The Shawshank Redemption** (1994) - Inspired by a novella and directed by Frank Darabont, this film tells the story of Andy Dufresne, a man convicted of murdering his wife, dealing with his harsh life in Shawshank Prison and forming an unlikely friendship with a fellow inmate. <br> 2. **The Godfather** (1972) - Directed by Francis Ford Coppola, this film is based on Mario Puzo's novel of the same name. It follows the story of the Corleone family, particularly Michael Corleone, who rises to power and takes over the family's criminal empire. <br> 3. **The Empire Strikes Back** (1980) - Directed by George Lucas, this film continues the story of a young Skywalker in the Star Wars saga. It follows Luke Skywalker as he helps the Rebel Alliance fight against the Galactic Empire and destroy the powerful weapon, the Death Star. <br> All of these films are celebrated for their cinematic achievements, powerful storytelling, and memorable characters. |\n| Translation |  |\n| User | Please help me translate into Chinese: 'What is now proved was once only imagined' |\n| LLaDA | 现在被证明的曾经只是想象 |\n| Translation |  |\n| User | Please help me translate into German: 'What is now proved was once only imagined' |\n| LLaDA | Wer heute bestätigt ist, war einst nur immaginiert. |\n| Math |  |\n| User | Emma decides to run 4 sprints 5 times a week. She runs 75 meters each sprint. How many total meters does she run a week? |\n| LLaDA | Emma runs 4 sprints each time, so she runs a total of $4 \\times 5=20$ sprints a week. Each sprint is 75 meters long, so Emma runs a total of $20 \\times 75=1500$ meters a week. The final result is 1500 |\n| Code |  |\n| User | I am writing python code, I have an array, please help me sort it from largest to smallest |\n| LLaDA | Certainly! You can sort an array from the largest to smallest in Python using the 'sort()' method or the 'sorted()' function. Here's an example: <br> \\#\\#\\# Using 'sort()' method: <br> my_array $=[3,1,4,1,5,2]$ <br> my_array.sort(reverse=True) <br> print(my_array) |\n\nTable 13. Multi-turn Dialogue Cases of LLaDA 8B Instruct.\n\n| Daily life |  |\n| :-- | :-- |\n| User | How do I prepare for a job interview? |\n| LLaDA | To prepare for a job interview, you should research the company and the job, practice <br> common interview questions, and dress appropriately. |\n| User | What are some common interview questions? |\n| LLaDA | Some common interview questions include \"Tell me about yourself\" and \"Why do you <br> want to work for us\"? |\n| Daily life |  |\n| User | How do I start learning programming? |\n| LLaDA | To learn programming, you can start by choosing a programming language that you are <br> interested in. Some popular languages include Python, Java, and C++. |\n| User | Which programming language should I learn first? |\n| LLaDA | It depends on your interests and goals. Python is a great language for beginners for its <br> simplicity and versatility. |\n| User | How long does it take to learn Python? |\n| LLaDA | It can take anywhere from a few weeks to several months to learn Python. |\n| User | What are some good Python projects for beginners? |\n| LLaDA | Some good Python projects for beginners include building a simple calculator, a game, and <br> a web application. |\n| Math |  |\n| User | Natalia sold clips to 48 of her friends in April, and then she sold half as many clips in May. <br> How many clips did Natalia sell altogether in April and May? |\n| LLaDA | Natalia sold clips to 48 friends in April. She sold half as many clips in May, so she sold <br> 48/2 = 24 clips in May. Altogether, Natalia sold 48 + 24 = 72 clips in April and May. The <br> final result is 72. |\n| User | Natalia sold three times as many items in June as she did in May. How many clips did <br> Natalia sell altogether in these three months? |\n| LLaDA | Natalia sold clips to 48 friends in April. She sold half as many clips in May, so she sold <br> 48/2 = 24 clips in May. Natalia sold three times as many items in June as she did in May, <br> so she sold 24 * 3 = 72 clips in June. Altogether, Natalia sold 48 + 24 + 72 = 144 clips in <br> these three months. The final result is 144. |\n\nTable 14. Poem Reversal Completion Cases where LLaDA 8B Instruct Succeeds but GPT-4o Fails.\n\n| Question1 |  |\n| :--: | :--: |\n| User | '但闻人语响’的上一句是什么? |\n| GPT-40 | \"但闻人语响\"的上一句是\"无可奈何花落去\"，这两句出自唐代词人李清照的（武陵春、春晚: 无可奈何花落去、但闻人语响。这首词表达了作者在春天时节的孤独与感伤、借花落和人语声的描写，反映出词人内心的无亲与失落。 |\n| LLaDA | \"但闻人语响\"的上一句是\"空山不见人\" |\n| Question2 |  |\n| User | ‘夜静春山空’的上一句是什么? |\n## | GPT-40 | \"夜静春山空\"的上一句是\"空山新雨后\"，这两句出自唐代诗人王维的（山居秋膜）:空山新雨后，夜静春山空。这首诗描绘了春天山中雨后的寂静与空灵，表现出自然的宁静与和谐美。 |\n| LLaDA | \"夜静春山空\"的上一句是\"人闲桂花落\" |"
    }
  ],
  "pdf_images": {
    "pdf_path": "inbox/2502.09992v2.pdf",
    "total_pages": 24,
    "pages": [
      {
        "page_number": 1,
        "filename": "page-001.png",
        "thumb_filename": "page-001-thumb.png",
        "mobile_filename": "page-001-mobile.png",
        "mobile_thumb_filename": "page-001-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 2,
        "filename": "page-002.png",
        "thumb_filename": "page-002-thumb.png",
        "mobile_filename": "page-002-mobile.png",
        "mobile_thumb_filename": "page-002-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 3,
        "filename": "page-003.png",
        "thumb_filename": "page-003-thumb.png",
        "mobile_filename": "page-003-mobile.png",
        "mobile_thumb_filename": "page-003-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 4,
        "filename": "page-004.png",
        "thumb_filename": "page-004-thumb.png",
        "mobile_filename": "page-004-mobile.png",
        "mobile_thumb_filename": "page-004-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 5,
        "filename": "page-005.png",
        "thumb_filename": "page-005-thumb.png",
        "mobile_filename": "page-005-mobile.png",
        "mobile_thumb_filename": "page-005-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 6,
        "filename": "page-006.png",
        "thumb_filename": "page-006-thumb.png",
        "mobile_filename": "page-006-mobile.png",
        "mobile_thumb_filename": "page-006-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 7,
        "filename": "page-007.png",
        "thumb_filename": "page-007-thumb.png",
        "mobile_filename": "page-007-mobile.png",
        "mobile_thumb_filename": "page-007-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 8,
        "filename": "page-008.png",
        "thumb_filename": "page-008-thumb.png",
        "mobile_filename": "page-008-mobile.png",
        "mobile_thumb_filename": "page-008-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 9,
        "filename": "page-009.png",
        "thumb_filename": "page-009-thumb.png",
        "mobile_filename": "page-009-mobile.png",
        "mobile_thumb_filename": "page-009-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 10,
        "filename": "page-010.png",
        "thumb_filename": "page-010-thumb.png",
        "mobile_filename": "page-010-mobile.png",
        "mobile_thumb_filename": "page-010-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 11,
        "filename": "page-011.png",
        "thumb_filename": "page-011-thumb.png",
        "mobile_filename": "page-011-mobile.png",
        "mobile_thumb_filename": "page-011-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 12,
        "filename": "page-012.png",
        "thumb_filename": "page-012-thumb.png",
        "mobile_filename": "page-012-mobile.png",
        "mobile_thumb_filename": "page-012-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 13,
        "filename": "page-013.png",
        "thumb_filename": "page-013-thumb.png",
        "mobile_filename": "page-013-mobile.png",
        "mobile_thumb_filename": "page-013-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 14,
        "filename": "page-014.png",
        "thumb_filename": "page-014-thumb.png",
        "mobile_filename": "page-014-mobile.png",
        "mobile_thumb_filename": "page-014-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 15,
        "filename": "page-015.png",
        "thumb_filename": "page-015-thumb.png",
        "mobile_filename": "page-015-mobile.png",
        "mobile_thumb_filename": "page-015-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 16,
        "filename": "page-016.png",
        "thumb_filename": "page-016-thumb.png",
        "mobile_filename": "page-016-mobile.png",
        "mobile_thumb_filename": "page-016-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 17,
        "filename": "page-017.png",
        "thumb_filename": "page-017-thumb.png",
        "mobile_filename": "page-017-mobile.png",
        "mobile_thumb_filename": "page-017-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 18,
        "filename": "page-018.png",
        "thumb_filename": "page-018-thumb.png",
        "mobile_filename": "page-018-mobile.png",
        "mobile_thumb_filename": "page-018-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 19,
        "filename": "page-019.png",
        "thumb_filename": "page-019-thumb.png",
        "mobile_filename": "page-019-mobile.png",
        "mobile_thumb_filename": "page-019-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 20,
        "filename": "page-020.png",
        "thumb_filename": "page-020-thumb.png",
        "mobile_filename": "page-020-mobile.png",
        "mobile_thumb_filename": "page-020-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 21,
        "filename": "page-021.png",
        "thumb_filename": "page-021-thumb.png",
        "mobile_filename": "page-021-mobile.png",
        "mobile_thumb_filename": "page-021-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 22,
        "filename": "page-022.png",
        "thumb_filename": "page-022-thumb.png",
        "mobile_filename": "page-022-mobile.png",
        "mobile_thumb_filename": "page-022-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 23,
        "filename": "page-023.png",
        "thumb_filename": "page-023-thumb.png",
        "mobile_filename": "page-023-mobile.png",
        "mobile_thumb_filename": "page-023-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      },
      {
        "page_number": 24,
        "filename": "page-024.png",
        "thumb_filename": "page-024-thumb.png",
        "mobile_filename": "page-024-mobile.png",
        "mobile_thumb_filename": "page-024-mobile-thumb.png",
        "width": 1275,
        "height": 1650,
        "mobile_width": 2550,
        "mobile_height": 3300
      }
    ]
  },
  "metadata": {
    "model": "gpt-4o",
    "pdf_path": "inbox/2502.09992v2.pdf"
  },
  "attribution": {
    "type": "arxiv",
    "url": "https://arxiv.org/abs/2502.09992",
    "id": "2502.09992"
  }
}